{"version":3,"sources":["components/Pages/Home/OurProjects/OurProjectsItem.jsx","components/Pages/Projects/ProjectsPageSearchForm.jsx","components/Pages/Projects/ProjectsPageFilter.jsx","components/Pages/Projects/Projects.jsx"],"names":["OurProjectsItem","props","data","projectsPage","ColoredBlock","styled","div","gradient","start","finish","className","in_archive","href","url","target","rel","loading","src","logo","alt","title","description","connect","projectsPageQuery","projectsPageReducer","dispatch","bindActionCreators","setProjectsPageQuery","aria-label","name","type","placeholder","autoComplete","onChange","event","value","showArchive","setArchiveDataStatus","htmlFor","id","checked","Projects","projectsPageData","setProjectsPageData","liveSearchData","setLiveSearchData","useEffect","a","axios","api","projectPage","result","fetchData","regExp","RegExp","map","item","match","length","key","filter"],"mappings":"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","file":"static/js/18.5561622b.chunk.js","sourcesContent":["import './_our-projects.scss';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nfunction OurProjectsItem(props) {\r\n\r\n    const {data, projectsPage} = props;\r\n\r\n    const ColoredBlock = styled.div`\r\n        color: #FFFFFF;\r\n        font-weight: 300;\r\n        font-size: 0.9rem;\r\n        letter-spacing: 0.15px;\r\n        padding: 10px;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        text-align: center;\r\n        background: linear-gradient(to right top, ${data.gradient.start}, ${data.gradient.finish});\r\n        border-radius: 0 0 3px 3px;\r\n    `;\r\n\r\n    return(\r\n        <div\r\n            className={data.in_archive ? 'our-projects-item-wrap archive projects-item' : 'our-projects-item-wrap projects-item'}\r\n        >\r\n            <a\r\n                className={projectsPage ? \"our-projects-page-item\" : \"our-projects-item\"}\r\n                href={data.url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                <div className=\"our-projects-wrap\">\r\n                    <img\r\n                        className=\"our-projects-logo\"\r\n                        loading=\"lazy\"\r\n                        src={data.logo}\r\n                        alt={data.title}\r\n                    />\r\n                    <div className=\"our-projects-title\">\r\n                        {data.title}\r\n                    </div>\r\n                </div>\r\n                <div className=\"our-projects-title-wrap\">\r\n                    <ColoredBlock>\r\n                        {data.description}\r\n                    </ColoredBlock>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OurProjectsItem;","import './_projects-page.scss'\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {setProjectsPageQuery} from '../../../actions/projectsPageAction';\r\n\r\n\r\nexport const ProjectsPageSearchForm = (props) => {\r\n\r\n    const {projectsPageQuery, setProjectsPageQuery} = props;\r\n\r\n    const changeHandler = (event) => {\r\n        setProjectsPageQuery(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <input\r\n            className=\"projects-page-form-input\"\r\n            aria-label=\"search\"\r\n            name=\"search\"\r\n            type=\"search\"\r\n            placeholder=\"Поиск\"\r\n            autoComplete=\"off\"\r\n            onChange={changeHandler}\r\n            value={projectsPageQuery}\r\n        />\r\n    )\r\n}\r\n\r\nProjectsPageSearchForm.propTypes = {\r\n    projectsPageQuery: PropTypes.string.isRequired,\r\n    setProjectsPageQuery: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({projectsPageReducer}) => ({\r\n    projectsPageQuery: projectsPageReducer.projectsPageQuery,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setProjectsPageQuery,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(ProjectsPageSearchForm);","import './_projects-page.scss'\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {setArchiveDataStatus} from '../../../actions/projectsPageAction';\r\n\r\n\r\nexport const ProjectsPageFilter = (props) => {\r\n\r\n    const {showArchive, setArchiveDataStatus} = props;\r\n\r\n    return (\r\n        <label\r\n            className=\"control control-checkbox\"\r\n            htmlFor=\"in-archive-checkbox\"\r\n        >\r\n            {/*отображать архивные проекты*/}\r\n            архивные<br />проекты\r\n            <input\r\n                type=\"checkbox\"\r\n                id=\"in-archive-checkbox\"\r\n                checked={showArchive}\r\n                onChange={() => setArchiveDataStatus(!showArchive)}\r\n            />\r\n            <div className=\"control_indicator\"></div>\r\n        </label>\r\n    )\r\n}\r\n\r\nProjectsPageFilter.propTypes = {\r\n    showArchive: PropTypes.bool.isRequired,\r\n    setArchiveDataStatus: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({projectsPageReducer}) => ({\r\n    showArchive: projectsPageReducer.showArchive,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setArchiveDataStatus,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(ProjectsPageFilter);","import './_projects-page.scss';\r\nimport api from '../../../assets/api';\r\nimport React, {useEffect} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport axios from 'axios';\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {\r\n    setProjectsPageData,\r\n    setLiveSearchData,\r\n} from '../../../actions/projectsPageAction';\r\nimport OurProjectsItem from \"../Home/OurProjects/OurProjectsItem\";\r\nimport ProjectsPageSearchForm from \"./ProjectsPageSearchForm\";\r\nimport ProjectsPageFilter from \"./ProjectsPageFilter\";\r\n\r\n\r\nexport const Projects = (props) => {\r\n\r\n    const {projectsPageData, setProjectsPageData, projectsPageQuery, showArchive, liveSearchData, setLiveSearchData} = props;\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios(\r\n                api.projectPage,\r\n            );\r\n            setProjectsPageData(result.data);\r\n            setLiveSearchData(result.data);\r\n        };\r\n        fetchData();\r\n    }, [api.projectPage]);\r\n\r\n    useEffect(() => {\r\n        let result = [];\r\n        const regExp = new RegExp(`${projectsPageQuery}`, 'i');\r\n        projectsPageData.map(item => {if (item.title.match(regExp)) result = [...result, item]});\r\n        setLiveSearchData(!projectsPageQuery.length ? projectsPageData : result);\r\n    }, [projectsPageQuery]);\r\n\r\n\r\n    return(\r\n        <div className=\"projects-page\">\r\n            <div className=\"projects-page-live-search\">\r\n                <div className=\"projects-page-form\">\r\n                    <ProjectsPageSearchForm />\r\n                </div>\r\n                <div className=\"projects-page-filter\">\r\n                    <ProjectsPageFilter />\r\n                </div>\r\n            </div>\r\n            <div className=\"projects-page-list\">\r\n                {\r\n                    showArchive\r\n                    ?\r\n                    liveSearchData.map(item =>\r\n                        <OurProjectsItem\r\n                            key={item.id}\r\n                            projectsPage={true}\r\n                            data={item}\r\n                        />\r\n                    )\r\n                    :\r\n                    liveSearchData.filter(item => item.in_archive === false).map(item =>\r\n                        <OurProjectsItem\r\n                            key={item.id}\r\n                            projectsPage={true}\r\n                            data={item}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProjects.propTypes = {\r\n    projectsPageData: PropTypes.array.isRequired,\r\n    setProjectsPageData: PropTypes.func.isRequired,\r\n    projectsPageQuery: PropTypes.string.isRequired,\r\n    showArchive: PropTypes.bool.isRequired,\r\n    liveSearchData: PropTypes.array.isRequired,\r\n    setLiveSearchData: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({projectsPageReducer}) => ({\r\n    projectsPageData: projectsPageReducer.projectsPageData,\r\n    projectsPageQuery: projectsPageReducer.projectsPageQuery,\r\n    showArchive: projectsPageReducer.showArchive,\r\n    liveSearchData: projectsPageReducer.liveSearchData,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setProjectsPageData,\r\n    setLiveSearchData,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Projects);"],"sourceRoot":""}
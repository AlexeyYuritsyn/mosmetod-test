{"version":3,"sources":["components/Header/HeaderDesktop/DropdownProfile/DropdownProfile.jsx","components/Header/HeaderDesktop/Menu/MenuItem.jsx","components/Header/HeaderDesktop/Menu/Menu.jsx","components/Header/HeaderDesktop/SearchDesktop/SearchDesktop.jsx","components/Header/HeaderDesktop/HeaderDesktop.jsx"],"names":["DropdownProfile","state","show","toggle","setState","className","href","rel","React","Component","MenuItem","props","data","onClick","window","scroll","activeClassName","to","url","exact","strict","title","connect","menuItemsList","navigationReducer","dispatch","bindActionCreators","setMenuItems","MenuItemsMain","map","item","index","key","target","Magnifier","width","height","viewBox","xmlns","fillRule","clipRule","d","Chevron","searchReducer","router","isOpen","path","location","pathname","toggleSearchDropdown","setUserSearchQuery","hideSearchResultList","setLiveSearchData","transitions","useTransition","from","display","enter","leave","trail","useTrail","config","mass","tension","friction","opacity","inputEl","useRef","onOutsideClick","document","querySelector","reset","current","focus","div","style","SearchForm","refProp","HeaderDesktop","Logo","description","api","menuItems"],"mappings":"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","file":"static/js/16.73557d54.chunk.js","sourcesContent":["import './_dropdown-profile.scss';\r\nimport React from 'react';\r\n// import { Transition, animated } from 'react-spring/renderprops';\r\n\r\n\r\nexport default class DropdownProfile extends React.Component {\r\n    state = { show: false };\r\n    toggle = () => this.setState(state => ({ show: !state.show }));\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dropdown-profile\">\r\n                <a\r\n                    className=\"dropdown-profile-button\"\r\n                    href=\"/site/login\"\r\n                    // target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Вход\r\n                </a>\r\n                {/*<div className=\"dropdown-profile-button\" onClick={this.toggle}>Войти</div>*/}\r\n                {/*<Transition*/}\r\n                {/*    // native*/}\r\n                {/*    items={this.state.show}*/}\r\n                {/*    trail={10}*/}\r\n                {/*    from={{ opacity: 0, transform: 'scale(0.9, 1) translateY(0px)',}}*/}\r\n                {/*    enter={{ opacity: 1, transform: 'scale(1, 1) translateY(10px)' }}*/}\r\n                {/*    leave={{ opacity: 0 }}*/}\r\n                {/*>*/}\r\n                {/*    {show =>*/}\r\n                {/*        show && (props =>*/}\r\n                {/*            <animated.div*/}\r\n                {/*                className=\"dropdown-profile-menu\"*/}\r\n                {/*                style={props}*/}\r\n                {/*            >*/}\r\n                {/*                */}\r\n                {/*            </animated.div>*/}\r\n                {/*        )*/}\r\n                {/*    }*/}\r\n                {/*</Transition>*/}\r\n            </div>\r\n        )\r\n    }\r\n}","import './_menu.scss';\r\nimport React, {useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Link, NavLink} from 'react-router-dom';\r\n// import {animated, Transition} from \"react-spring/renderprops\";\r\n\r\n\r\nexport const MenuItem = (props) => {\r\n\r\n    const {data} = props;\r\n\r\n    // const [showToggle, setShowToggle] = useState(false);\r\n    //\r\n    // const menuToggle = () => {\r\n    //     setShowToggle(!showToggle);\r\n    // };\r\n\r\n    const pageScrollToTop = () => {\r\n        window.scroll(0, 0);\r\n    };\r\n\r\n    const clickHandler = () => {\r\n        pageScrollToTop();\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className=\"menu-list-item\"\r\n            onClick={clickHandler()}\r\n            // onMouseEnter={menuToggle()}\r\n            // onMouseLeave={menuToggle()}\r\n        >\r\n            <NavLink\r\n                className=\"menu-list-link\"\r\n                activeClassName=\"menu-list-link-active\"\r\n                to={data.url}\r\n                exact={data.url === '/'}\r\n                strict={data.url !== '/'}\r\n            >\r\n                {data.title}\r\n            </NavLink>\r\n            {/*<Transition*/}\r\n            {/*    native*/}\r\n            {/*    items={showToggle}*/}\r\n            {/*    from={{ opacity: 0, transition: '0.05s' }}*/}\r\n            {/*    enter={{ opacity: 1, display: 'flex' }}*/}\r\n            {/*    leave={{ opacity: 0, display: 'none' }}*/}\r\n            {/*>*/}\r\n            {/*    {show =>*/}\r\n            {/*        (data.dropdownMenu.length !== 0) && show && (props =>*/}\r\n            {/*            <animated.div*/}\r\n            {/*                className=\"dropdown-menu-wrap container\"*/}\r\n            {/*                style={props}*/}\r\n            {/*            >*/}\r\n            {/*                <ul className=\"dropdown-menu\">*/}\r\n            {/*                    {*/}\r\n            {/*                        data.dropdownMenu.map((item) =>*/}\r\n            {/*                            <li*/}\r\n            {/*                                className=\"dropdown-menu-item\"*/}\r\n            {/*                                key={item.key}>*/}\r\n            {/*                                <Link*/}\r\n            {/*                                    className=\"dropdown-menu-item-link\"*/}\r\n            {/*                                    onClick={pageScrollToTop()}*/}\r\n            {/*                                    to={item.url}*/}\r\n            {/*                                >*/}\r\n            {/*                                    {item.title}*/}\r\n            {/*                                </Link>*/}\r\n            {/*                            </li>*/}\r\n            {/*                        )*/}\r\n            {/*                    }*/}\r\n            {/*                </ul>*/}\r\n            {/*            </animated.div>*/}\r\n            {/*        )*/}\r\n            {/*    }*/}\r\n            {/*</Transition>*/}\r\n        </li>\r\n    )\r\n}\r\n\r\nMenuItem.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MenuItem;","import './_menu.scss';\r\nimport MenuItemsMain from \"./menu-items.json\";\r\nimport React, {useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {\r\n    setMenuItems,\r\n} from '../../../../actions/navigationAction';\r\nimport MenuItem from './MenuItem';\r\n\r\n\r\nexport const Menu = (props) => {\r\n\r\n    const {menuItemsList, setMenuItems} = props;\r\n\r\n    // useEffect(() => {\r\n    //     const fetchData = async () => {\r\n    //         const result = await axios(\r\n    //             \"./menu-items.json\",\r\n    //         );\r\n    //         setMenuItems(result.data);\r\n    //     };\r\n    //     fetchData();\r\n    // }, []);\r\n\r\n    return (\r\n        <ul className=\"menu\">\r\n            {\r\n                MenuItemsMain.map((item, index) =>\r\n                    <MenuItem\r\n                        key={index}\r\n                        data={item}\r\n                    />\r\n                )\r\n            }\r\n            <li className=\"menu-list-item\">\r\n                <a\r\n                    className=\"menu-list-link menu-competition-link\"\r\n                    href=\"https://konkurs.mosmetod.ru\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Конкурсы\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nMenu.propTypes = {\r\n    menuItemsList: PropTypes.array.isRequired,\r\n    setMenuItems: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({navigationReducer}) => ({\r\n    menuItemsList: navigationReducer.menuItemsList,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setMenuItems,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Menu);","import './_search-desktop.scss';\r\nimport React, {useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useTrail, useTransition, animated} from 'react-spring';\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport SearchForm from \"./SearchForm\";\r\n// import SearchTagsBlock from \"./SearchTagsBlock\";\r\nimport SearchResultDropdown from \"./SearchResultList\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {\r\n    toggleSearchDropdown,\r\n    setUserSearchQuery,\r\n    hideSearchResultList,\r\n    setLiveSearchData\r\n} from '../../../../actions/searchAction';\r\n\r\n\r\nconst Magnifier = () => {\r\n    return (\r\n        <svg\r\n            className=\"magnifier\"\r\n            width=\"22\"\r\n            height=\"23\"\r\n            viewBox=\"0 0 22 23\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.51548 17.1006C13.3951 17.1006 16.5401 13.9556 16.5401 10.076C16.5401 6.19644 13.3951 3.05142 9.51548 3.05142C5.6359 3.05142 2.49087 6.19644 2.49087 10.076C2.49087 13.9556 5.6359 17.1006 9.51548 17.1006ZM9.51548 19.5212C14.7319 19.5212 18.9606 15.2924 18.9606 10.076C18.9606 4.8596 14.7319 0.630859 9.51548 0.630859C4.29906 0.630859 0.0703125 4.8596 0.0703125 10.076C0.0703125 15.2924 4.29906 19.5212 9.51548 19.5212Z\"/>\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M19.4333 22.6309L14.2025 17.4001L15.9141 15.6885L21.1448 20.9193L19.4333 22.6309Z\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nconst Chevron = () => {\r\n    return (\r\n        <svg\r\n            className=\"chevron\"\r\n            width=\"19\"\r\n            height=\"12\"\r\n            viewBox=\"0 0 19 12\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M2.76499 11.5762L9.57876 4.77725L16.3925 11.5762L18.4856 9.48306L9.57876 0.576172L0.671875 9.48306L2.76499 11.5762Z\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport const SearchDesktop = (props) => {\r\n\r\n    const {\r\n        isOpen,\r\n        toggleSearchDropdown,\r\n        setUserSearchQuery,\r\n        hideSearchResultList,\r\n        path,\r\n        setLiveSearchData,\r\n    } = props;\r\n\r\n    const onClickOutsideHandler = () => {\r\n        if (isOpen) {\r\n            toggleSearchDropdown(false);\r\n            setUserSearchQuery('');\r\n            hideSearchResultList(true);\r\n        }\r\n    };\r\n\r\n    const transitions = useTransition(isOpen, null, {\r\n        from: { display: 'none' },\r\n        enter: { display: 'flex' },\r\n        leave: { display: 'none' },\r\n    });\r\n\r\n    const config = { mass: 1, tension: 2000, friction: 200 };\r\n    const trail = useTrail(1, {\r\n        config,\r\n        opacity: isOpen ? 1 : 0,\r\n        height: isOpen ? 200 : 0,\r\n        from: { opacity: 0, height: 0 },\r\n    });\r\n\r\n    const inputEl = useRef(null);\r\n    const onButtonClick = () => {\r\n        inputEl.current.focus();\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-header-desktop-wrap\">\r\n            {path !== '/search-page' && <OutsideClickHandler\r\n                onOutsideClick={onClickOutsideHandler}\r\n            >\r\n                <div\r\n                    className=\"search-header-block\"\r\n                >\r\n                    <div\r\n                        className=\"search-icon-container\"\r\n                        onClick={() => {\r\n                            toggleSearchDropdown(!isOpen);\r\n                            document.querySelector('.search-input-wrap').reset();\r\n                            setUserSearchQuery('');\r\n                            setLiveSearchData([]);\r\n                            onButtonClick();\r\n                        }}\r\n                    >\r\n                        {transitions.map(({props}, index) =>\r\n                            isOpen\r\n                            ?\r\n                            <animated.div\r\n                                key={index}\r\n                                style={props}\r\n                                className=\"search-header-icon\"\r\n                            >\r\n                                <Chevron />\r\n                            </animated.div>\r\n                            :\r\n                            <animated.div\r\n                                key={index}\r\n                                style={props}\r\n                                className=\"search-header-icon\"\r\n                            >\r\n                                <Magnifier />\r\n                            </animated.div>\r\n                        )}\r\n                    </div>\r\n                    {trail.map(({height, opacity}, index) => (\r\n                        <animated.div\r\n                            key={index}\r\n                            style={{opacity, height}}\r\n                            className=\"dropdown-search-block\"\r\n                        >\r\n                            <div className=\"dropdown-search-container\">\r\n                                <SearchForm\r\n                                    refProp={inputEl}\r\n                                />\r\n                                {/*<SearchTagsBlock />*/}\r\n                            </div>\r\n                        </animated.div>\r\n                    ))}\r\n                </div>\r\n                <SearchResultDropdown />\r\n            </OutsideClickHandler>}\r\n        </div>\r\n    )\r\n};\r\n\r\nSearchDesktop.propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    toggleSearchDropdown: PropTypes.func.isRequired,\r\n    setUserSearchQuery: PropTypes.func.isRequired,\r\n    hideSearchResultList: PropTypes.func.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n    setLiveSearchData: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({searchReducer, router}) => ({\r\n    isOpen: searchReducer.isOpen,\r\n    path: router.location.pathname,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    toggleSearchDropdown,\r\n    setUserSearchQuery,\r\n    hideSearchResultList,\r\n    setLiveSearchData,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(SearchDesktop);","import './_header-desktop.scss';\r\nimport api from \"../../../assets/api\";\r\nimport React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport DropdownProfile from './DropdownProfile/DropdownProfile';\r\nimport Menu from './Menu/Menu';\r\nimport SearchDesktop from './SearchDesktop/SearchDesktop';\r\n\r\n\r\nexport default class HeaderDesktop extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-container container\">\r\n                    <div className=\"logo-desktop\">\r\n                        <Logo title={'mosmetod.ru'} description={'Официальный сайт Городского методического центра'} />\r\n                    </div>\r\n                    <DropdownProfile />\r\n                    <Menu url={api.menuItems} />\r\n                    <SearchDesktop />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}
{"version":3,"sources":["../../react_components/index.js","../../react_components/PaginationBoxView.js","../../react_components/PageView.js","../../react_components/BreakView.js","components/Pages/SearchPage/empty.svg","components/Pages/SearchPage/SearchPageForm.jsx","components/Pages/SearchPage/SearchPagePaginate.jsx","components/Pages/SearchPage/SearchPage.jsx"],"names":["PaginationBoxView","evt","selected","pageCount","selectedItem","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","index","leftSide","rightSide","page","breakView","createPageView","key","onClick","initialSelected","props","this","initialPage","disableInitialCallback","extraAriaContext","console","prevProps","forcePage","forwardJump","backwardJump","pageIndex","hrefBuilder","state","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","handlePageSelected","bind","href","ariaLabel","disabledClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","className","tabIndex","role","onKeyPress","aria-disabled","Component","propTypes","PropTypes","onPageChange","func","defaultProps","PageView","ariaCurrent","aria-label","aria-current","isRequired","BreakView","module","exports","ResetButton","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","connect","searchReducer","query","currentPage","siteFilter","timeFilter","pageItemsQuantity","dispatch","bindActionCreators","setUserSearchQuery","setRadioSiteFilter","setRadioTimeFilter","setSearchPageUrl","setSearchPageStringsQuantityUrl","setCurrentPage","push","handleNavigate","link","clickRadioSiteHandler","value","clickRadioTimeHandler","onSubmit","event","preventDefault","name","type","placeholder","autoComplete","onChange","target","autoFocus","onKeyUp","keyCode","keyUpHandler","id","defaultChecked","htmlFor","globalReducer","searchPageStringsQuantity","pagesQuantity","userWidth","setPagesQuantity","window","scroll","subContainerClassName","searchData","searchPageUrl","searchPageStringsQuantityUrl","searchPageUrlNew","setSearchData","setSearchPageStringsQuantity","setPageItemsQuantity","toggleSearchDropdown","useEffect","a","axios","result","data","fetchData","searchPageCount","fetchQuantity","Project","url","rel","logo","src","alt","title","description","date","text","Material","to","map","item","length","emptyLogo"],"mappings":"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","file":"static/js/13.d74bf6b6.chunk.js","sourcesContent":["import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = props => {\n  let pageClassName = props.pageClassName;\n  let pageLinkClassName = props.pageLinkClassName;\n\n  const onClick = props.onClick;\n  const href = props.href;\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      props.page +\n      (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (props.selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + props.page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + props.activeClassName;\n    } else {\n      pageClassName = props.activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof props.activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = props.activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        onClick={onClick}\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={onClick}\n      >\n        {props.page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = props => {\n  const { breakLabel, breakClassName, breakLinkClassName, onClick } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={onClick}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","module.exports = __webpack_public_path__ + \"static/media/empty.0fa71a96.svg\";","import './_search-page.scss';\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n// import {Link} from 'react-router-dom';\r\nimport {push} from 'connected-react-router';\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {\r\n    setUserSearchQuery,\r\n    setRadioSiteFilter,\r\n    setRadioTimeFilter,\r\n    setSearchPageUrl,\r\n    setSearchPageStringsQuantityUrl,\r\n    setCurrentPage,\r\n} from '../../../actions/searchAction';\r\n\r\n\r\nconst ResetButton = () => {\r\n    return (\r\n        <svg\r\n            width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.827473 12.377L12.8483 0.356224L13.7227 1.23059L1.70184 13.2514L0.827473 12.377Z\" fill=\"#FF887C\"/>\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.72221 0.356282L13.743 12.3771L12.8687 13.2515L0.847838 1.23065L1.72221 0.356282Z\" fill=\"#FF887C\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const SearchPageForm = (props) => {\r\n\r\n    const {\r\n        query,\r\n        siteFilter,\r\n        timeFilter,\r\n        // currentPage,\r\n        setUserSearchQuery,\r\n        setRadioSiteFilter,\r\n        setRadioTimeFilter,\r\n        setSearchPageUrl,\r\n        setSearchPageStringsQuantityUrl,\r\n        push,\r\n        pageItemsQuantity,\r\n        setCurrentPage,\r\n    } = props;\r\n\r\n    const handleNavigate = (link) => {\r\n        push(link);\r\n        setSearchPageUrl(link);\r\n        setSearchPageStringsQuantityUrl(link);\r\n        setCurrentPage(0);\r\n    };\r\n\r\n    const changeHandler = (event) => {\r\n        // setUserSearchQuery(event.target.value.trim());\r\n        setUserSearchQuery(event.target.value);\r\n    }\r\n\r\n    const clickRadioSiteHandler = (value) => {\r\n        setRadioSiteFilter(value);\r\n    }\r\n\r\n    const clickRadioTimeHandler = (value) => {\r\n        setRadioTimeFilter(value);\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const keyUpHandler = (event) => {\r\n        if (event.keyCode === 13) {\r\n            handleNavigate(`?search=${query}&site=${siteFilter}&time=${timeFilter}&page=1&count=${pageItemsQuantity}`);\r\n            setCurrentPage(0);\r\n        }\r\n    };\r\n\r\n    const resetFilterHandler = () => {\r\n        handleNavigate(`?search=${query}&site=site&time=all&page=1&count=20`);\r\n        setRadioSiteFilter('site');\r\n        setRadioTimeFilter('all');\r\n    }\r\n\r\n    return(\r\n        <form\r\n            className=\"search-page-form\"\r\n            onSubmit={submitHandler}\r\n        >\r\n            <div className=\"input-submit-wrap\">\r\n                <input\r\n                    className=\"search-page-input\"\r\n                    name=\"search\"\r\n                    type=\"search\"\r\n                    placeholder=\"Поиск\"\r\n                    autoComplete=\"off\"\r\n                    onChange={changeHandler}\r\n                    value={query}\r\n                    autoFocus\r\n                    onKeyUp={(event) => {\r\n                        keyUpHandler(event);\r\n                    }}\r\n                />\r\n                {/*<Link*/}\r\n                {/*    to={`?search=${query}&site=${siteFilter}&time=${timeFilter}&page=${currentPage}&count=${pageItemsQuantity}`}*/}\r\n                {/*    className=\"search-page-submit\"*/}\r\n                {/*    type=\"submit\"*/}\r\n                {/*    onClick={() => handleNavigate(`?search=${query}&site=${siteFilter}&time=${timeFilter}&page=${currentPage}&count=${pageItemsQuantity}`)}*/}\r\n                {/*>*/}\r\n                {/*    Найти*/}\r\n                {/*</Link>*/}\r\n                <button\r\n                    className=\"search-page-submit\"\r\n                    type=\"submit\"\r\n                    onClick={() => handleNavigate(`?search=${query}&site=${siteFilter}&time=${timeFilter}&page=1&count=${pageItemsQuantity}`)}\r\n                >\r\n                    Найти\r\n                </button>\r\n            </div>\r\n            <div className=\"site-filter\">\r\n                <div className=\"radio-wrap-site\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"site\"\r\n                        className=\"radio-site\"\r\n                        id=\"site\"\r\n                        name=\"site-filter\"\r\n                        defaultChecked={true}\r\n                        onClick={() => clickRadioSiteHandler('site')}\r\n                    />\r\n                    <label\r\n                        className=\"blue-radio\"\r\n                        htmlFor=\"site\"\r\n                    >\r\n                        по сайту\r\n                    </label>\r\n                </div>\r\n                <div className=\"radio-wrap-site radio-wrap-site-margin\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"projects\"\r\n                        className=\"radio-site\"\r\n                        id=\"projects\"\r\n                        name=\"site-filter\"\r\n                        onClick={() => clickRadioSiteHandler('projects')}\r\n                    />\r\n                    <label\r\n                        className=\"blue-radio\"\r\n                        htmlFor=\"projects\"\r\n                    >\r\n                        по проектам\r\n                    </label>\r\n                </div>\r\n                <div className=\"radio-wrap-site\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"title\"\r\n                        className=\"radio-site\"\r\n                        id=\"title\"\r\n                        name=\"site-filter\"\r\n                        onClick={() => clickRadioSiteHandler('title')}\r\n                    />\r\n                    <label\r\n                        className=\"blue-radio\"\r\n                        htmlFor=\"title\"\r\n                    >\r\n                        по заголовкам материалов\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className=\"time-filter\">\r\n                <div className=\"radio-wrap-projects\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"all-time\"\r\n                        className=\"radio-projects\"\r\n                        id=\"all-time\"\r\n                        name=\"projects-filter\"\r\n                        onClick={() => clickRadioTimeHandler('all-time')}\r\n                        defaultChecked={true}\r\n                    />\r\n                    <label\r\n                        className=\"grey-radio\"\r\n                        htmlFor=\"all-time\"\r\n                    >\r\n                        за все время\r\n                    </label>\r\n                </div>\r\n                <div className=\"radio-wrap-projects\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"day\"\r\n                        className=\"radio-projects\"\r\n                        id=\"day\"\r\n                        name=\"projects-filter\"\r\n                        onClick={() => clickRadioTimeHandler('day')}\r\n                    />\r\n                    <label\r\n                        className=\"grey-radio\"\r\n                        htmlFor=\"day\"\r\n                    >\r\n                        за сутки\r\n                    </label>\r\n                </div>\r\n                <div className=\"radio-wrap-projects\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"week\"\r\n                        className=\"radio-projects\"\r\n                        id=\"week\"\r\n                        name=\"projects-filter\"\r\n                        onClick={() => clickRadioTimeHandler('week')}\r\n                    />\r\n                    <label\r\n                        className=\"grey-radio\"\r\n                        htmlFor=\"week\"\r\n                    >\r\n                        за неделю\r\n                    </label>\r\n                </div>\r\n                <div className=\"radio-wrap-projects\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"month\"\r\n                        className=\"radio-projects\"\r\n                        id=\"month\"\r\n                        name=\"projects-filter\"\r\n                        onClick={() => clickRadioTimeHandler('month')}\r\n                    />\r\n                    <label\r\n                        className=\"grey-radio\"\r\n                        htmlFor=\"month\"\r\n                    >\r\n                        за месяц\r\n                    </label>\r\n                </div>\r\n                <button\r\n                    className=\"radio-wrap-projects\"\r\n                    onClick={() => resetFilterHandler()}\r\n                    type=\"reset\"\r\n                >\r\n                    <ResetButton />\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nSearchPageForm.propTypes = {\r\n    query: PropTypes.string.isRequired,\r\n    siteFilter: PropTypes.string.isRequired,\r\n    timeFilter: PropTypes.string.isRequired,\r\n    setUserSearchQuery: PropTypes.func.isRequired,\r\n    setRadioSiteFilter: PropTypes.func.isRequired,\r\n    setRadioTimeFilter: PropTypes.func.isRequired,\r\n    setSearchPageStringsQuantityUrl: PropTypes.func.isRequired,\r\n    push: PropTypes.func.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    setCurrentPage: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({searchReducer}) => ({\r\n    query: searchReducer.query,\r\n    currentPage: searchReducer.currentPage,\r\n    siteFilter: searchReducer.siteFilter,\r\n    timeFilter: searchReducer.timeFilter,\r\n    pageItemsQuantity: searchReducer.pageItemsQuantity,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setUserSearchQuery,\r\n    setRadioSiteFilter,\r\n    setRadioTimeFilter,\r\n    setSearchPageUrl,\r\n    setSearchPageStringsQuantityUrl,\r\n    setCurrentPage,\r\n    push,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(SearchPageForm);","import './_search-page.scss';\r\nimport '../../Pagination/_pagination.scss';\r\nimport ReactPaginate from 'react-paginate';\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {\r\n    setPagesQuantity,\r\n    setCurrentPage,\r\n    setSearchPageUrl,\r\n} from '../../../actions/searchAction';\r\n\r\n\r\nconst SearchPagePaginate = (props) => {\r\n\r\n    const {\r\n        searchPageStringsQuantity,\r\n        pagesQuantity,\r\n        currentPage,\r\n        siteFilter,\r\n        timeFilter,\r\n        query,\r\n        pageItemsQuantity,\r\n        setPagesQuantity,\r\n        setCurrentPage,\r\n        setSearchPageUrl,\r\n        userWidth,\r\n    } = props;\r\n\r\n    const pageClickHandler = page => {\r\n        setPagesQuantity(searchPageStringsQuantity / pageItemsQuantity);\r\n        setCurrentPage(page.selected);\r\n        setSearchPageUrl(`?search=${query}&site=${siteFilter}&time=${timeFilter}&page=${page.selected + 1}&count=${pageItemsQuantity}`);\r\n        // setLoadPageMode(true);\r\n        window.scroll(0, 0);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pagination-pages-block\">\r\n            <ReactPaginate\r\n                previousLabel={userWidth >= 580 ? 'назад' : ''}\r\n                nextLabel={userWidth >= 580 ? 'вперед' : ''}\r\n                breakLabel={userWidth >= 580 ? '...' : '.'}\r\n                breakClassName={'break-me'}\r\n                forcePage={currentPage}\r\n                pageCount={pagesQuantity}\r\n                onPageChange={pageClickHandler}\r\n                marginPagesDisplayed={1}\r\n                pageRangeDisplayed={userWidth >= 580 ? 4 : 0}\r\n                containerClassName={'pagination'}\r\n                subContainerClassName={'pages pagination'}\r\n                activeClassName={'active'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nSearchPagePaginate.propTypes = {\r\n    searchPageStringsQuantity: PropTypes.number.isRequired,\r\n    pagesQuantity: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    siteFilter: PropTypes.string.isRequired,\r\n    timeFilter: PropTypes.string.isRequired,\r\n    query: PropTypes.string.isRequired,\r\n    pageItemsQuantity: PropTypes.number.isRequired,\r\n    setPagesQuantity: PropTypes.func.isRequired,\r\n    setCurrentPage: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({searchReducer, globalReducer}) => ({\r\n    searchPageStringsQuantity: searchReducer.searchPageStringsQuantity,\r\n    pagesQuantity: searchReducer.pagesQuantity,\r\n    currentPage: searchReducer.currentPage,\r\n    siteFilter: searchReducer.siteFilter,\r\n    timeFilter: searchReducer.timeFilter,\r\n    query: searchReducer.query,\r\n    pageItemsQuantity: searchReducer.pageItemsQuantity,\r\n    userWidth: globalReducer.userWidth,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setPagesQuantity,\r\n    setCurrentPage,\r\n    setSearchPageUrl,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(SearchPagePaginate);","import './_search-page.scss';\r\nimport '../../Pagination/_pagination.scss';\r\nimport emptyLogo from './empty.svg';\r\n// import Preloader from \"../../Preloader/Preloader\";\r\nimport React, {useEffect} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n// import MyErrorBoundary from \"../../ErrorBoundary/MyErrorBoundary\";\r\nimport {push} from 'connected-react-router';\r\nimport SearchPageForm from \"./SearchPageForm\";\r\nimport SearchPagePaginate from \"./SearchPagePaginate\";\r\n// import SearchPageQuantityButtons from \"./SearchPageQuantityButtons\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {\r\n    setSearchData,\r\n    setSearchPageStringsQuantity,\r\n    setPagesQuantity,\r\n    setCurrentPage,\r\n    setSearchPageStringsQuantityUrl,\r\n    setSearchPageUrl,\r\n    setPageItemsQuantity,\r\n    // setSearchPageUrlNew,\r\n    toggleSearchDropdown,\r\n} from '../../../actions/searchAction';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst SearchPage = (props) => {\r\n\r\n    const {\r\n        searchData,\r\n        setSearchData,\r\n        searchPageUrl,\r\n        // searchPageStringsQuantity,\r\n        setSearchPageStringsQuantity,\r\n        searchPageStringsQuantityUrl,\r\n        setPagesQuantity,\r\n        pagesQuantity,\r\n        // setCurrentPage,\r\n        currentPage,\r\n        // setSearchPageUrl,\r\n        // timeFilter,\r\n        // siteFilter,\r\n        // query,\r\n        pageItemsQuantity,\r\n        // setPageItemsQuantity,\r\n        // push,\r\n        // setSearchPageUrlNew,\r\n        // searchPageUrlNew,\r\n        toggleSearchDropdown,\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios(\r\n                searchPageUrl,\r\n            );\r\n            setSearchData(result.data);\r\n        };\r\n        fetchData();\r\n    }, [searchPageUrl]);\r\n\r\n    useEffect(() => {\r\n        const fetchQuantity = async () => {\r\n            const result = await axios(\r\n                searchPageStringsQuantityUrl,\r\n            );\r\n            setSearchPageStringsQuantity(result.data.searchPageCount);\r\n            setPagesQuantity(result.data.searchPageCount / pageItemsQuantity)\r\n        };\r\n        fetchQuantity();\r\n    }, [searchPageStringsQuantityUrl, currentPage]);\r\n\r\n    // const loadMore = () => {\r\n    //     setCurrentPage(currentPage + 1);\r\n    //     setSearchPageUrl(`?search=${query}&site=${siteFilter}&time=${timeFilter}&page=${currentPage + 1}&count=${pageItemsQuantity}`);\r\n    // }\r\n\r\n    const Project = (props) => {\r\n\r\n        const {data} = props;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"search-header-wrap\">\r\n                    <a\r\n                        className=\"search-page-result-link\"\r\n                        href={data.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        onClick={() => toggleSearchDropdown(false)}\r\n                    >\r\n                        {data.logo && <img\r\n                            className=\"search-page-result-logo\"\r\n                            src={data.logo}\r\n                            alt=\"logo\"\r\n                        />}\r\n                    </a>\r\n                    <div className=\"search-link-wrap\">\r\n                        <a\r\n                            className=\"search-page-result-link\"\r\n                            href={data.url}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            onClick={() => toggleSearchDropdown(false)}\r\n                        >\r\n                            <p className=\"search-page-result-title\">\r\n                                {data.title}\r\n                            </p>\r\n                        </a>\r\n                        <div className=\"search-date-description-wrap\">\r\n                            {data.description && <p className=\"search-page-result-description\">\r\n                                {data.description}\r\n                            </p>}\r\n                            {data.date && <p className=\"search-page-result-date\">\r\n                                {data.date}\r\n                            </p>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {data.text && <p className=\"search-page-result-text\">\r\n                {data.text}\r\n            </p>}\r\n            </>\r\n        )\r\n    }\r\n\r\n    const Material = (props) => {\r\n\r\n        const {data} = props;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"search-header-wrap\">\r\n                    <div className=\"search-link-wrap\">\r\n                        <Link\r\n                            className=\"search-page-result-link\"\r\n                            to={`/documents/${data.id}`}\r\n                            onClick={() => toggleSearchDropdown(false)}\r\n                        >\r\n                            <p className=\"search-page-result-title\">\r\n                                {data.title}\r\n                            </p>\r\n                        </Link>\r\n                        <div className=\"search-date-description-wrap\">\r\n                            {data.description && <p className=\"search-page-result-description\">\r\n                                {data.description}\r\n                            </p>}\r\n                            {data.date && <p className=\"search-page-result-date\">\r\n                                {data.date}\r\n                            </p>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {data.text && <p className=\"search-page-result-text\">\r\n                {data.text}\r\n            </p>}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"search-page-main\">\r\n            <SearchPageForm />\r\n            <ul className=\"search-page-result\">\r\n                {searchData.map((item, id) =>\r\n                    <li\r\n                        key={id}\r\n                        className=\"search-page-result-item\"\r\n                    >\r\n                        {\r\n                            item.id\r\n                            ?\r\n                            <Material data={item} />\r\n                            :\r\n                            <Project data={item} />\r\n                        }\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            {searchData.length === 0 && <div className=\"search-page-empty\">\r\n                <div\r\n                    className=\"search-page-result-item\"\r\n                >\r\n                    <div className=\"search-header-wrap\">\r\n                        <img\r\n                            className=\"search-page-result-logo\"\r\n                            src={emptyLogo}\r\n                            alt=\"empty-logo\"\r\n                        />\r\n                        <p className=\"search-page-result-title\">\r\n                            По вашему запросу ничего не найдено\r\n                        </p>\r\n                    </div>\r\n                    <p className=\"search-page-result-text\">\r\n                        Проверьте написание\r\n                    </p>\r\n                    <p className=\"search-page-result-text\">\r\n                        Укоротите запрос или используйте другие ключевые слова\r\n                    </p>\r\n                    <p className=\"search-page-result-text\">\r\n                        Измените настройки фильтрации\r\n                    </p>\r\n                </div>\r\n            </div>}\r\n            {/*<div className=\"see-more-container\">*/}\r\n            {/*    <button*/}\r\n            {/*    onClick={loadMore}*/}\r\n            {/*    type=\"button\"*/}\r\n            {/*    className=\"work-plan-view-more\"*/}\r\n            {/*    >*/}\r\n            {/*        загрузить еще*/}\r\n            {/*    </button>*/}\r\n            {/*</div>*/}\r\n            <div className=\"pagination-wrap pagination-wrap-margin\">\r\n                {searchData.length !== 0 && pagesQuantity > 1 &&\r\n                    <>\r\n                        <SearchPagePaginate />\r\n                        {/*<SearchPageQuantityButtons />*/}\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearchPage.propTypes = {\r\n    searchData: PropTypes.array.isRequired,\r\n    setSearchPageStringsQuantity: PropTypes.func.isRequired,\r\n    searchPageStringsQuantity: PropTypes.number.isRequired,\r\n    searchPageStringsQuantityUrl: PropTypes.string.isRequired,\r\n    pagesQuantity: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    searchPageUrl: PropTypes.string.isRequired,\r\n    setSearchData: PropTypes.func.isRequired,\r\n    setPagesQuantity: PropTypes.func.isRequired,\r\n    setCurrentPage: PropTypes.func.isRequired,\r\n    setPageItemsQuantity: PropTypes.func.isRequired,\r\n    toggleSearchDropdown: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({searchReducer}) => ({\r\n    searchData: searchReducer.searchData,\r\n    searchPageUrl: searchReducer.searchPageUrl,\r\n    searchPageStringsQuantity: searchReducer.searchPageStringsQuantity,\r\n    searchPageStringsQuantityUrl: searchReducer.searchPageStringsQuantityUrl,\r\n    pagesQuantity: searchReducer.pagesQuantity,\r\n    currentPage: searchReducer.currentPage,\r\n    query: searchReducer.query,\r\n    siteFilter: searchReducer.siteFilter,\r\n    timeFilter: searchReducer.timeFilter,\r\n    pageItemsQuantity: searchReducer.pageItemsQuantity,\r\n    searchPageUrlNew: searchReducer.searchPageUrlNew,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setSearchData,\r\n    setSearchPageStringsQuantity,\r\n    setPagesQuantity,\r\n    setCurrentPage,\r\n    setSearchPageStringsQuantityUrl,\r\n    setSearchPageUrl,\r\n    setPageItemsQuantity,\r\n    push,\r\n    // setSearchPageUrlNew,\r\n    toggleSearchDropdown,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(SearchPage);"],"sourceRoot":""}
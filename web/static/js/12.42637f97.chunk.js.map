{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","components/Header/HeaderMobile/BurgerMenu/BurgerMenuItem.jsx","components/Footer/MobileFooter.jsx","components/Header/HeaderMobile/BurgerMenu/BurgerMenu.jsx","components/Header/HeaderMobile/SearchMobile/SearchMobile.jsx","components/Header/HeaderMobile/HeaderMobile.jsx"],"names":["_objectDestructuringEmpty","obj","TypeError","connect","dispatch","bindActionCreators","toggleBurgerMenu","props","dataObject","title","key","url","className","onClick","window","scroll","activeClassName","to","exact","strict","MobileFooter","Socials","React","Component","navigationReducer","menuItemsList","isOpenBurgerMenu","setMenuItems","MenuItemsMain","map","item","index","href","target","rel","Magnifier","width","height","viewBox","xmlns","fillRule","clipRule","d","CrossIcon","searchReducer","router","isOpen","path","location","pathname","toggleSearchDropdown","setUserSearchQuery","hideSearchResultList","setLiveSearchData","trail","useTrail","config","mass","tension","friction","opacity","from","inputEl","useRef","onOutsideClick","document","querySelector","reset","current","focus","div","style","SearchForm","refProp","SearchResultList","BurgerOpenIcon","BurgerCloseIcon","HeaderMobile","userWidth","Logo","disableCloseOnEsc","onClose","customBurgerIcon","id","globalReducer"],"mappings":"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","file":"static/js/12.42637f97.chunk.js","sourcesContent":["export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import './_burger-menu.scss'\r\nimport React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    toggleBurgerMenu,\r\n} from \"../../../../actions/navigationAction\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\n\r\nconst pageScrollToTop = () => {\r\n    window.scroll(0,0);\r\n};\r\n\r\nexport const BurgerMenuItem = (props) => {\r\n\r\n    const {toggleBurgerMenu} = props;\r\n\r\n    const {title, key, url} = props.dataObject;\r\n\r\n    const clickHandler = () => {\r\n        pageScrollToTop();\r\n        toggleBurgerMenu(false);\r\n    }\r\n\r\n    return(\r\n        <li\r\n            key={key}\r\n            className=\"menu-burger-item\"\r\n        >\r\n            <NavLink\r\n                onClick={clickHandler}\r\n                className=\"menu-burger-link\"\r\n                activeClassName=\"menu-burger-link-active\"\r\n                to={url}\r\n                exact={url === '/'}\r\n                strict={url !== '/'}\r\n            >\r\n                {title}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nBurgerMenuItem.propTypes = {\r\n    toggleBurgerMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({}) => ({});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    toggleBurgerMenu,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(BurgerMenuItem);","import './_mobile-footer.scss';\r\nimport React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Socials from \"../Socials/Socials\";\r\n\r\n\r\nexport default class MobileFooter extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mobile-footer\">\r\n                <div className=\"mobile-footer-social-icons-block\">\r\n                    <Socials/>\r\n                </div>\r\n                <div className=\"mobile-footer-logo-block\">\r\n                    <NavLink to=\"/\" className=\"mobile-footer-logo-text\">\r\n                        <div className=\"logo-text-bold\">Официальный сайт</div>\r\n                        <div className=\"logo-text-bold\">Городского методического центра</div>\r\n                        <div className=\"mobile-logo-text-thin\">Департамента образования и науки города Москвы</div>\r\n                    </NavLink>\r\n                </div>\r\n                <div className=\"mobile-footer-menu-block\">\r\n                    <div className=\"mobile-logo-text-thin\">8 (495) 912-63-37</div>\r\n                    <div className=\"mobile-logo-text-thin\">gmc@edu.mos.ru</div>\r\n                    <div className=\"mobile-logo-text-thin\">Воронцовская ул. 6а, стр. 1</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './_burger-menu.scss';\r\nimport React, {useEffect} from 'react';\r\n// import axios from 'axios';\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {\r\n    setMenuItems,\r\n    toggleBurgerMenu\r\n} from '../../../../actions/navigationAction';\r\n// import OutsideClickHandler from \"react-outside-click-handler\";\r\nimport BurgerMenuItem from \"./BurgerMenuItem\";\r\nimport MobileFooter from \"../../../Footer/MobileFooter\";\r\nimport MenuItemsMain from \"../../HeaderDesktop/Menu/menu-items.json\";\r\n\r\n\r\nexport function BurgerMenu(props) {\r\n\r\n    const {menuItemsList, setMenuItems, isOpenBurgerMenu, toggleBurgerMenu} = props;\r\n\r\n    // useEffect(() => {\r\n    //     const fetchData = async () => {\r\n    //         const result = await axios(\r\n    //             url,\r\n    //         );\r\n    //         setMenuItems(result.data);\r\n    //     };\r\n    //     fetchData();\r\n    // }, [url]);\r\n\r\n    return(\r\n        <div className=\"burger-menu-wrap\">\r\n            <div className=\"menu-burger\">\r\n                <ul className=\"menu-burger-list\">\r\n                    {MenuItemsMain.map((item, index) =>\r\n                        <BurgerMenuItem\r\n                            key={index}\r\n                            dataObject={item}\r\n                        />\r\n                    )}\r\n                    <li className=\"menu-burger-item\">\r\n                        <a\r\n                            className=\"menu-burger-link menu-competition-link\"\r\n                            href=\"https://mosmetod.ru/centr/konkursy/konkursy.html\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            onClick={() => toggleBurgerMenu(false)}\r\n                        >\r\n                            Конкурсы\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"menu-burger-item\">\r\n                        <a\r\n                            className=\"menu-burger-link\"\r\n                            href=\"/site/login\"\r\n                        >\r\n                            Вход\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"menu-burger-footer\">\r\n                    <MobileFooter />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nBurgerMenu.propTypes = {\r\n    menuItemsList: PropTypes.array.isRequired,\r\n    setMenuItems: PropTypes.func.isRequired,\r\n    toggleBurgerMenu: PropTypes.func.isRequired,\r\n    isOpenBurgerMenu: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({navigationReducer}) => ({\r\n    menuItemsList: navigationReducer.menuItemsList,\r\n    isOpenBurgerMenu: navigationReducer.isOpenBurgerMenu,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setMenuItems,\r\n    toggleBurgerMenu,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(BurgerMenu);","import './_search-mobile.scss';\r\nimport React, {useRef} from 'react';\r\nimport {useTrail, animated} from 'react-spring';\r\nimport PropTypes from 'prop-types';\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {\r\n    toggleBurgerMenu,\r\n} from '../../../../actions/navigationAction';\r\nimport {\r\n    toggleSearchDropdown,\r\n    setUserSearchQuery,\r\n    hideSearchResultList,\r\n    setLiveSearchData,\r\n} from '../../../../actions/searchAction';\r\nimport SearchForm from \"../../HeaderDesktop/SearchDesktop/SearchForm\";\r\nimport SearchResultList from \"../../HeaderDesktop/SearchDesktop/SearchResultList\";\r\n\r\n\r\nconst Magnifier = () => {\r\n    return (\r\n        <svg\r\n            className=\"magnifier\"\r\n            width=\"22\"\r\n            height=\"22\"\r\n            viewBox=\"0 0 22 23\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.51548 17.1006C13.3951 17.1006 16.5401 13.9556 16.5401 10.076C16.5401 6.19644 13.3951 3.05142 9.51548 3.05142C5.6359 3.05142 2.49087 6.19644 2.49087 10.076C2.49087 13.9556 5.6359 17.1006 9.51548 17.1006ZM9.51548 19.5212C14.7319 19.5212 18.9606 15.2924 18.9606 10.076C18.9606 4.8596 14.7319 0.630859 9.51548 0.630859C4.29906 0.630859 0.0703125 4.8596 0.0703125 10.076C0.0703125 15.2924 4.29906 19.5212 9.51548 19.5212Z\"/>\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M19.4333 22.6309L14.2025 17.4001L15.9141 15.6885L21.1448 20.9193L19.4333 22.6309Z\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nconst CrossIcon = () => {\r\n    return (\r\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M23.6605 2.68325L21.3105 0.333252L11.9938 9.64992L2.67715 0.333252L0.327148 2.68325L9.64382 11.9999L0.327148 21.3166L2.67715 23.6666L11.9938 14.3499L21.3105 23.6666L23.6605 21.3166L14.3438 11.9999L23.6605 2.68325Z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const SearchMobile = (props) => {\r\n\r\n    const {isOpen, toggleSearchDropdown, setUserSearchQuery, hideSearchResultList, path, setLiveSearchData, toggleBurgerMenu} = props;\r\n\r\n    const onClickOutsideHandler = () => {\r\n        if (isOpen) {\r\n            toggleSearchDropdown(false);\r\n            document.querySelector('.search-input-wrap').reset();\r\n            setUserSearchQuery('');\r\n            hideSearchResultList(false);\r\n        }\r\n    };\r\n\r\n    const config = { mass: 1, tension: 2000, friction: 200 };\r\n    const trail = useTrail(1, {\r\n        config,\r\n        opacity: isOpen ? 1 : 0,\r\n        width: isOpen ? '100%' : '0%',\r\n        from: {opacity: 0, width: '0%'},\r\n    });\r\n\r\n    const inputEl = useRef(null);\r\n    const onButtonClick = () => {\r\n        inputEl.current.focus();\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-mobile-wrap\">\r\n            {path !== '/search-page' && <OutsideClickHandler\r\n                onOutsideClick={onClickOutsideHandler}\r\n            >\r\n                <div\r\n                    className=\"search-mobile-icon\"\r\n                    onClick={() => {\r\n                        toggleBurgerMenu(false);\r\n                        toggleSearchDropdown(true);\r\n                        setLiveSearchData([]);\r\n                        setUserSearchQuery('');\r\n                        onButtonClick();\r\n                    }}\r\n                >\r\n                    <Magnifier />\r\n                </div>\r\n                {trail.map(({width, opacity}, index) => (\r\n                    <animated.div\r\n                        key={index}\r\n                        style={{opacity, width}}\r\n                        className=\"search-mobile-dropdown-block container\"\r\n                    >\r\n                        <SearchForm\r\n                            refProp={inputEl}\r\n                        />\r\n                        {isOpen && <div\r\n                            className=\"search-mobile-icon\"\r\n                            onClick={() => {\r\n                                toggleSearchDropdown(false);\r\n                                setUserSearchQuery('');\r\n                            }}\r\n                        >\r\n                            <CrossIcon/>\r\n                        </div>}\r\n                    </animated.div>\r\n                ))}\r\n                <SearchResultList/>\r\n            </OutsideClickHandler>}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nSearchMobile.propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    toggleSearchDropdown: PropTypes.func.isRequired,\r\n    setUserSearchQuery: PropTypes.func.isRequired,\r\n    hideSearchResultList: PropTypes.func.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n    setLiveSearchData: PropTypes.func.isRequired,\r\n    toggleBurgerMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({searchReducer, router}) => ({\r\n    isOpen: searchReducer.isOpen,\r\n    path: router.location.pathname,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    toggleSearchDropdown,\r\n    setUserSearchQuery,\r\n    hideSearchResultList,\r\n    setLiveSearchData,\r\n    toggleBurgerMenu,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(SearchMobile);\r\n\r\n","import './_header-mobile.scss'\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {\r\n    setMenuItems,\r\n    toggleBurgerMenu,\r\n} from '../../../actions/navigationAction';\r\nimport {\r\n    setUserSearchQuery,\r\n    setLiveSearchData,\r\n} from '../../../actions/searchAction';\r\nimport {slide as Menu} from 'react-burger-menu';\r\nimport Logo from \"../../Logo/Logo\";\r\nimport BurgerMenu from \"./BurgerMenu/BurgerMenu\";\r\nimport SearchMobile from \"./SearchMobile/SearchMobile\";\r\n\r\n\r\nconst BurgerOpenIcon = () => {\r\n    return (\r\n        <svg width=\"22\" height=\"22\" viewBox=\"0 0 30 20\"  xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.52681 20H30V16.6667H5.52681V20ZM12.4654 11.6667H30V8.33333H12.4654V11.6667ZM0 0V3.33333H30V0H0Z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nconst BurgerCloseIcon = () => {\r\n    return (\r\n        <svg width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M23.6605 2.68325L21.3105 0.333252L11.9938 9.64992L2.67715 0.333252L0.327148 2.68325L9.64382 11.9999L0.327148 21.3166L2.67715 23.6666L11.9938 14.3499L21.3105 23.6666L23.6605 21.3166L14.3438 11.9999L23.6605 2.68325Z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const HeaderMobile = (props) => {\r\n\r\n    const {isOpenBurgerMenu, toggleBurgerMenu, userWidth, setUserSearchQuery, setLiveSearchData} = props;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header-mobile container\">\r\n                <div className=\"header-mobile-container\">\r\n                    <div\r\n                        className=\"logo-mobile\"\r\n                        onClick={() => toggleBurgerMenu(false)}\r\n                    >\r\n                        <Logo />\r\n                    </div>\r\n                    <div className=\"search-burger-container\">\r\n                        <SearchMobile />\r\n                        <div\r\n                            className=\"burger-icon-container\"\r\n                            onClick={() => {\r\n                                toggleBurgerMenu(!isOpenBurgerMenu);\r\n                                setLiveSearchData([]);\r\n                            }}\r\n                        >\r\n                            {isOpenBurgerMenu ? <BurgerCloseIcon /> : <BurgerOpenIcon />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Menu\r\n                width={userWidth >= 550 ? 500 : '100%'}\r\n                disableCloseOnEsc\r\n                onClose={() => toggleBurgerMenu(false)}\r\n                isOpen={isOpenBurgerMenu}\r\n                customBurgerIcon={false}\r\n                id=\"burger-menu\"\r\n            >\r\n                <BurgerMenu />\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nHeaderMobile.propTypes = {\r\n    menuItemsList: PropTypes.array.isRequired,\r\n    setMenuItems: PropTypes.func.isRequired,\r\n    toggleBurgerMenu: PropTypes.func.isRequired,\r\n    isOpenBurgerMenu: PropTypes.bool.isRequired,\r\n    userWidth: PropTypes.number.isRequired,\r\n    setUserSearchQuery: PropTypes.func.isRequired,\r\n    setLiveSearchData: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({navigationReducer, globalReducer}) => ({\r\n    menuItemsList: navigationReducer.menuItemsList,\r\n    isOpenBurgerMenu: navigationReducer.isOpenBurgerMenu,\r\n    userWidth: globalReducer.userWidth,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setMenuItems,\r\n    toggleBurgerMenu,\r\n    setUserSearchQuery,\r\n    setLiveSearchData,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(HeaderMobile);\r\n"],"sourceRoot":""}
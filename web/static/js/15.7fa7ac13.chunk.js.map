{"version":3,"sources":["../node_modules/react-use/esm/useEffectOnce.js","../node_modules/react-use/esm/useMount.js","components/Pages/NewsFeed/icons/gear-icon.svg","components/Pages/TeachingSpace/icons/bell 1.svg","components/Pages/TeachingSpace/TeachingSpaceDropFilter.jsx","components/Pages/TeachingSpace/TeachingSpaceMaterialListItem.jsx","components/Pages/TeachingSpace/TeachingSpaceMaterialListFilter.jsx","components/Pages/TeachingSpace/TeachingSpaceDropSubscribe.jsx","components/Pages/TeachingSpace/TeachingSpaceMaterialsList.jsx"],"names":["useEffectOnce","effect","useEffect","useMount","fn","module","exports","connect","teachingSpaceReducer","showDropDown","timeFilter","startDateRange","endDateRange","dispatch","bindActionCreators","setShowDropDown","changeTeachingSpaceTimeFilter","props","category","useState","time","setTime","Date","startDate","setStartDate","endDate","setEndDate","mounted","className","onOutsideClick","onClick","src","gearIcon","alt","id","title","name","map","item","key","handleTimeButton","tabIndex","selected","onChange","date","selectsStart","dateFormat","placeholderText","format","calendarClassName","selectsEnd","minDate","startDateFilter","endDateFilter","TeachingSpaceMaterialListItem","data","color","ColorBlock","styled","div","to","material_categories_name","materialsCategory","changeTeachingSpaceCategoryFilter","categoryId","Color","subscribeResult","teachingSpaceInfo","submitSubscribe","bellIcon","name_category_parent","autoComplete","onSubmit","event","preventDefault","email","target","value","id_category_parent","type","placeholder","required","pattern","isError","totalItemsCount","materialsFilters","setInitialTeachingSpaceData","uploadTeachingSpaceData","setTeachingSpaceInfo","parseInt","match","params","Error404","name_category","TeachingSpaceDropFilter","categoryName","length","MyErrorBoundary","fallback","Preloader","dataLength","next","hasMore","loader"],"mappings":"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","file":"static/js/15.7fa7ac13.chunk.js","sourcesContent":["import { useEffect } from 'react';\nvar useEffectOnce = function (effect) {\n    useEffect(effect, []);\n};\nexport default useEffectOnce;\n","import useEffectOnce from './useEffectOnce';\nvar useMount = function (fn) {\n    useEffectOnce(function () {\n        fn();\n    });\n};\nexport default useMount;\n","module.exports = __webpack_public_path__ + \"static/media/gear-icon.ec291ece.svg\";","module.exports = __webpack_public_path__ + \"static/media/bell 1.cc01924b.svg\";","import \"../NewsFeed/_news-feed.scss\";\r\nimport \"./_teaching-space.scss\"\r\nimport React, {useEffect, useState} from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport {format} from 'date-fns';\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    setShowDropDown,\r\n    changeTeachingSpaceTimeFilter,\r\n} from \"../../../actions/teachingSpaceAction\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\nimport gearIcon from \"../NewsFeed/icons/gear-icon.svg\";\r\n\r\n\r\nconst TeachingSpaceDropFilterBlock = (props) => {\r\n    const {\r\n        showDropDown,\r\n        category,\r\n        timeFilter,\r\n        startDateRange,\r\n        endDateRange,\r\n        changeTeachingSpaceTimeFilter,\r\n        setShowDropDown,\r\n    } = props;\r\n\r\n    const [time, setTime] = useState(timeFilter);\r\n    const [startDate, setStartDate] = useState(startDateRange ? new Date(startDateRange) : '');\r\n    const [endDate, setEndDate] = useState(endDateRange ? new Date(endDateRange) : '');\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            setTime(timeFilter);\r\n        }\r\n        return () => mounted = false;\r\n    }, [timeFilter]);\r\n\r\n    const timeList = [\r\n        {\r\n            id: 1,\r\n            title: 'за сутки',\r\n            name: 'day'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'за неделю',\r\n            name: 'week'\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'за месяц',\r\n            name: 'month'\r\n        },\r\n        {\r\n            id: 4,\r\n            title: 'за все время',\r\n            name: 'all'\r\n        }\r\n    ];\r\n\r\n    const toggleDropdown = () => {\r\n        setShowDropDown(!showDropDown);\r\n    }\r\n\r\n    const handleTimeButton = (item) => {\r\n        setTime(item.name);\r\n        setStartDate('');\r\n        setEndDate('');\r\n    }\r\n\r\n    const applyAll = () => {\r\n        const startDateFilter = startDate ? format(startDate, 'yyyy-MM-dd') : '';\r\n        const endDateFilter = endDate ? format(endDate, 'yyyy-MM-dd') : '';\r\n        const timeFilter = startDate && endDate ? '' : time;\r\n        setShowDropDown(false);\r\n        changeTeachingSpaceTimeFilter(category, timeFilter, startDateFilter, endDateFilter);\r\n    }\r\n\r\n    return (\r\n        <div className=\"teaching-space-filter-drop-wrap\">\r\n            <OutsideClickHandler\r\n                onOutsideClick={() => {\r\n                    setShowDropDown(false);\r\n                }}\r\n            >\r\n                <div className=\"teaching-space-filter-drop-button\" onClick={toggleDropdown}>\r\n                    <img src={gearIcon} alt=\"+\"/>\r\n                </div>\r\n                {\r\n                    showDropDown &&\r\n                    <div className=\"teaching-space-filter-drop-block\">\r\n                        <div className=\"news-feed-filter-drop-block-left\">\r\n                            {\r\n                                timeList.map((item) => (\r\n                                    <div className={item.name === time ?\r\n                                        \"news-feed-filter-drop-block-period-button-active\" :\r\n                                        \"news-feed-filter-drop-block-period-button\"}\r\n                                         key={item.id}\r\n                                         onClick={() => handleTimeButton(item)}>\r\n                                        {item.title}\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"news-feed-filter-drop-block-right\">\r\n                            <div className=\"news-feed-filter-drop-block-header\">\r\n                                дата/период\r\n                            </div>\r\n                            <div className=\"news-feed-filter-drop-block-period-wrap\">\r\n                                от\r\n                                <DatePicker\r\n                                    className=\"news-feed-filter-date-input\"\r\n                                    tabIndex=\"1\"\r\n                                    selected={startDate}\r\n                                    onChange={date => setStartDate(date)}\r\n                                    selectsStart\r\n                                    startDate={startDate}\r\n                                    endDate={endDate}\r\n                                    dateFormat=\"dd.MM.yyyy\"\r\n                                    placeholderText={format(new Date(), 'dd.MM.yyyy')}\r\n                                    calendarClassName=\"news-feed-filter-calendar\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"news-feed-filter-drop-block-period-wrap\">\r\n                                до\r\n                                <DatePicker\r\n                                    className=\"news-feed-filter-date-input\"\r\n                                    tabIndex=\"1\"\r\n                                    selected={endDate}\r\n                                    onChange={date => setEndDate(date)}\r\n                                    selectsEnd\r\n                                    startDate={startDate}\r\n                                    endDate={endDate}\r\n                                    minDate={startDate}\r\n                                    dateFormat=\"dd.MM.yyyy\"\r\n                                    placeholderText={format(new Date(), 'dd.MM.yyyy')}\r\n                                    calendarClassName=\"news-feed-filter-calendar\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"news-feed-filter-drop-block-apply-button\"\r\n                                 onClick={applyAll}>\r\n                                Применить\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </OutsideClickHandler>\r\n        </div>\r\n    );\r\n}\r\n\r\nTeachingSpaceDropFilterBlock.propTypes = {\r\n    showDropDown: PropTypes.bool.isRequired,\r\n    category: PropTypes.number.isRequired,\r\n    timeFilter: PropTypes.string.isRequired,\r\n    startDateRange: PropTypes.string.isRequired,\r\n    endDateRange: PropTypes.string.isRequired,\r\n    setShowDropDown: PropTypes.func.isRequired,\r\n    changeTeachingSpaceTimeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({teachingSpaceReducer}) => ({\r\n    showDropDown: teachingSpaceReducer.showDropDown,\r\n    timeFilter: teachingSpaceReducer.timeFilter,\r\n    startDateRange: teachingSpaceReducer.startDateRange,\r\n    endDateRange: teachingSpaceReducer.endDateRange,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setShowDropDown,\r\n    changeTeachingSpaceTimeFilter,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(TeachingSpaceDropFilterBlock);","import React from 'react';\r\nimport \"./_teaching-space.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nfunction TeachingSpaceMaterialListItem(props) {\r\n\r\n    const {data, category, color} = props;\r\n\r\n    const ColorBlock = styled.div`\r\n        width: ${color ? '20px' : 0};\r\n        height: ${color ? '36px' : 0};\r\n        background: ${data.color};\r\n        border-radius: 50%;\r\n        margin-left: -11px;\r\n    `;\r\n\r\n    return (\r\n        <>\r\n            <NavLink className=\"teaching-space-materials-list-item-block\"\r\n                     to={`/teaching-space/${category}/${data.id}`}>\r\n                <ColorBlock />\r\n                <div className=\"teaching-space-materials-list-item-desc\">\r\n                    <div className=\"teaching-space-materials-list-item-title\">\r\n                        {data.title}\r\n                    </div>\r\n                    <div className=\"teaching-space-materials-list-item-category\">\r\n                        {data.material_categories_name}\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TeachingSpaceMaterialListItem;","import React from 'react';\r\nimport \"./_teaching-space.scss\";\r\nimport styled from \"styled-components\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    changeTeachingSpaceCategoryFilter,\r\n} from \"../../../actions/teachingSpaceAction\";\r\n\r\n\r\nconst TeachingSpaceMaterialListFilter = (props) => {\r\n\r\n    const {\r\n        data,\r\n        materialsCategory,\r\n        categoryId,\r\n        changeTeachingSpaceCategoryFilter,\r\n    } = props;\r\n\r\n    const Color = styled.div`\r\n        width: 16px;\r\n        height: 16px;\r\n        background: ${data.color};\r\n        margin-right: 8px;\r\n        border-radius: 50%;\r\n    `;\r\n\r\n\r\n    const handleTabClick = (item) => {\r\n        changeTeachingSpaceCategoryFilter(categoryId, item.id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={data.id === materialsCategory\r\n                ? 'teaching-space-materials-list-header-filter-button-active'\r\n                : 'teaching-space-materials-list-header-filter-button'}\r\n                 onClick={() => handleTabClick(data)}>\r\n                <Color />\r\n                {data.title}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nTeachingSpaceMaterialListFilter.propTypes = {\r\n    materialsCategory: PropTypes.number.isRequired,\r\n    changeTeachingSpaceCategoryFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({teachingSpaceReducer}) => ({\r\n    materialsCategory: teachingSpaceReducer.materialsCategory,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    changeTeachingSpaceCategoryFilter,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(TeachingSpaceMaterialListFilter);","import \"../NewsFeed/_news-feed.scss\";\r\nimport \"./_teaching-space.scss\"\r\nimport React, {useState} from 'react';\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\nimport bellIcon from \"./icons/bell 1.svg\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    submitSubscribe,\r\n} from \"../../../actions/teachingSpaceAction\";\r\n\r\n\r\nconst TeachingSpaceDropSubscribe = (props) => {\r\n    const {\r\n        subscribeResult,\r\n        teachingSpaceInfo,\r\n        submitSubscribe,\r\n    } = props;\r\n\r\n    const [showDropDown, setShowDropDown] = useState(false);\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const email = event.target.email.value;\r\n\r\n        submitSubscribe(email, teachingSpaceInfo.id_category_parent);\r\n    }\r\n\r\n    const toggleDropdown = () => {\r\n        setShowDropDown(!showDropDown);\r\n    }\r\n\r\n    return (\r\n        <div className=\"teaching-space-materials-list-subscribe-drop-wrap\">\r\n            <OutsideClickHandler\r\n                onOutsideClick={() => {\r\n                    setShowDropDown(false);\r\n                }}\r\n            >\r\n                <div className=\"teaching-space-materials-list-subscribe-drop-bell\" onClick={toggleDropdown}>\r\n                    <img src={bellIcon} alt=\"+\"/>\r\n                </div>\r\n                {\r\n                    showDropDown &&\r\n                    <div className=\"teaching-space-materials-list-subscribe-drop-block\">\r\n                        <div className=\"teaching-space-materials-list-subscribe-drop-header\">\r\n                            Подписка на новости\r\n                        </div>\r\n                        <div className=\"teaching-space-materials-list-subscribe-drop-desc\">\r\n                            Для подписки на новости раздела <span\r\n                            className=\"category-name\">«{teachingSpaceInfo.name_category_parent}»</span> укажите Email\r\n                        </div>\r\n                        <form id=\"teaching-space-subscribe-drop\"\r\n                              className=\"teaching-space-materials-list-subscribe-drop-form\"\r\n                              autoComplete=\"off\"\r\n                              onSubmit={submitHandler}>\r\n                            <input className=\"teaching-space-materials-list-subscribe-drop-input\"\r\n                                   type=\"email\"\r\n                                   name=\"email\"\r\n                                   placeholder=\"E-mail\"\r\n                                   required={true}\r\n                                   pattern=\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\"/>\r\n                            <div className=\"teaching-space-materials-list-subscribe-drop-desc\">\r\n                                {subscribeResult}\r\n                            </div>\r\n                            <button className=\"teaching-space-materials-list-subscribe-drop-button\"\r\n                                    type=\"submit\">\r\n                                Подписаться\r\n                                <div className=\"teaching-space-materials-list-subscribe-drop-button-bell\">\r\n                                    <img src={bellIcon} alt=\">\"/>\r\n                                </div>\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                }\r\n            </OutsideClickHandler>\r\n        </div>\r\n    );\r\n}\r\n\r\nTeachingSpaceDropSubscribe.propTypes = {\r\n    subscribeResult: PropTypes.string.isRequired,\r\n    teachingSpaceInfo: PropTypes.object.isRequired,\r\n    submitSubscribe: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({teachingSpaceReducer}) => ({\r\n    subscribeResult: teachingSpaceReducer.subscribeResult,\r\n    teachingSpaceInfo: teachingSpaceReducer.teachingSpaceInfo,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    submitSubscribe,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(TeachingSpaceDropSubscribe);","import React, {Suspense, useState} from 'react';\r\nimport \"./_teaching-space.scss\";\r\nimport bellIcon from './icons/bell 1.svg';\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    setInitialTeachingSpaceData,\r\n    uploadTeachingSpaceData,\r\n    setTeachingSpaceInfo,\r\n    changeTeachingSpaceCategoryFilter,\r\n    submitSubscribe,\r\n} from \"../../../actions/teachingSpaceAction\";\r\nimport TeachingSpaceDropFilter from \"./TeachingSpaceDropFilter\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport TeachingSpaceMaterialListItem from \"./TeachingSpaceMaterialListItem\";\r\nimport TeachingSpaceMaterialListFilter from \"./TeachingSpaceMaterialListFilter\";\r\nimport MyErrorBoundary from \"../../ErrorBoundary/MyErrorBoundary\";\r\nimport TeachingSpaceDropSubscribe from \"./TeachingSpaceDropSubscribe\";\r\nimport {useMount} from \"react-use\";\r\nimport Error404 from \"../Error404/Error404\";\r\n\r\n\r\nconst TeachingSpaceMaterialsList = (props) => {\r\n    const {\r\n        isError,\r\n        data,\r\n        materialsCategory,\r\n        totalItemsCount,\r\n        materialsFilters,\r\n        teachingSpaceInfo,\r\n        subscribeResult,\r\n        setTeachingSpaceInfo,\r\n        setInitialTeachingSpaceData,\r\n        uploadTeachingSpaceData,\r\n        changeTeachingSpaceCategoryFilter,\r\n        submitSubscribe,\r\n    } = props;\r\n\r\n    const categoryId = parseInt(props.match.params.category, 10);\r\n    const allMaterialsFilter = 0;\r\n\r\n    useMount(() => {\r\n        setInitialTeachingSpaceData(categoryId);\r\n        setTeachingSpaceInfo(categoryId);\r\n    });\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const email = event.target.email.value;\r\n\r\n        submitSubscribe(email, teachingSpaceInfo.id_category_parent);\r\n    }\r\n\r\n    const handleTabClick = () => {\r\n        changeTeachingSpaceCategoryFilter(categoryId, allMaterialsFilter);\r\n    }\r\n\r\n    function loadMore() {\r\n        uploadTeachingSpaceData(categoryId);\r\n    }\r\n\r\n    return isError\r\n        ?\r\n        <Error404/>\r\n        :\r\n        <>\r\n            <div className=\"teaching-space-materials-list-main-wrap\">\r\n                <div className=\"teaching-space-materials-list-materials-block\">\r\n                    <div className=\"teaching-space-materials-list-header-block\">\r\n                        <div className=\"teaching-space-materials-list-header-wrap\">\r\n                            <div className=\"teaching-space-materials-list-header\">\r\n                                {`${teachingSpaceInfo.name_category_parent} / ${teachingSpaceInfo.name_category}`}\r\n                            </div>\r\n                            <div className=\"teaching-space-materials-list-header-filter-drop-wrap\">\r\n                                <TeachingSpaceDropFilter\r\n                                    category={categoryId}/>\r\n                                <TeachingSpaceDropSubscribe\r\n                                    categoryId={teachingSpaceInfo.id_category_parent}\r\n                                    categoryName={teachingSpaceInfo.name_category_parent}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            materialsFilters.length > 1 &&\r\n                            <div className=\"teaching-space-materials-list-header-filter-block\">\r\n                                <div className={materialsCategory === allMaterialsFilter\r\n                                    ? 'teaching-space-materials-list-header-filter-button-active'\r\n                                    : 'teaching-space-materials-list-header-filter-button'}\r\n                                     onClick={handleTabClick}>\r\n                                    Все\r\n                                </div>\r\n                                {\r\n                                    materialsFilters.map((item) =>\r\n                                        <div\r\n                                            key={item.id}>\r\n                                            <TeachingSpaceMaterialListFilter\r\n                                                data={item}\r\n                                                categoryId={categoryId}/>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <MyErrorBoundary>\r\n                        <Suspense fallback={<Preloader/>}>\r\n                            <InfiniteScroll\r\n                                dataLength={data.length}\r\n                                next={loadMore}\r\n                                hasMore={totalItemsCount !== data.length}\r\n                                loader={<Preloader/>}\r\n                            >\r\n                                <div className=\"teaching-space-materials-list\">\r\n                                    {\r\n                                        data.map((item) =>\r\n                                            <TeachingSpaceMaterialListItem\r\n                                                key={item.id}\r\n                                                color={materialsFilters.length > 1}\r\n                                                category={categoryId}\r\n                                                data={item}/>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </InfiniteScroll>\r\n                        </Suspense>\r\n                    </MyErrorBoundary>\r\n                </div>\r\n                <div className=\"teaching-space-materials-list-subscribe-wrap\">\r\n                    <div className=\"teaching-space-materials-list-subscribe-block\">\r\n                        <div className=\"teaching-space-materials-list-subscribe-header\">\r\n                            Подписка на новости\r\n                        </div>\r\n                        <div className=\"teaching-space-materials-list-subscribe-desc\">\r\n                            Для подписки на новости раздела <span\r\n                            className=\"category-name\">«{teachingSpaceInfo.name_category_parent}»</span> укажите Email\r\n                        </div>\r\n                        <form id=\"teaching-space-subscribe\"\r\n                              className=\"teaching-space-materials-list-subscribe-form\"\r\n                              autoComplete=\"off\"\r\n                              onSubmit={submitHandler}>\r\n                            <input className=\"teaching-space-materials-list-subscribe-input\"\r\n                                   type=\"email\"\r\n                                   name=\"email\"\r\n                                   placeholder=\"E-mail\"\r\n                                   required={true}\r\n                                   pattern=\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\"/>\r\n                            <div className=\"teaching-space-materials-list-subscribe-desc\">\r\n                                {subscribeResult}\r\n                            </div>\r\n                            <button className=\"teaching-space-materials-list-subscribe-button\"\r\n                                    type=\"submit\">\r\n                                Подписаться\r\n                                <div className=\"teaching-space-materials-list-subscribe-button-bell\">\r\n                                    <img src={bellIcon} alt=\">\"/>\r\n                                </div>\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n}\r\n\r\nTeachingSpaceMaterialsList.propTypes = {\r\n    isError: PropTypes.bool.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    materialsFilters: PropTypes.array.isRequired,\r\n    materialsCategory: PropTypes.number.isRequired,\r\n    totalItemsCount: PropTypes.number.isRequired,\r\n    teachingSpaceInfo: PropTypes.object.isRequired,\r\n    subscribeResult: PropTypes.string.isRequired,\r\n    setInitialTeachingSpaceData: PropTypes.func.isRequired,\r\n    uploadTeachingSpaceData: PropTypes.func.isRequired,\r\n    changeTeachingSpaceCategoryFilter: PropTypes.func.isRequired,\r\n    setTeachingSpaceInfo: PropTypes.func.isRequired,\r\n    submitSubscribe: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({teachingSpaceReducer}) => ({\r\n    data: teachingSpaceReducer.data,\r\n    isError: teachingSpaceReducer.isError,\r\n    totalItemsCount: teachingSpaceReducer.totalItemsCount,\r\n    materialsCategory: teachingSpaceReducer.materialsCategory,\r\n    materialsFilters: teachingSpaceReducer.materialsFilters,\r\n    teachingSpaceInfo: teachingSpaceReducer.teachingSpaceInfo,\r\n    subscribeResult: teachingSpaceReducer.subscribeResult,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setInitialTeachingSpaceData,\r\n    uploadTeachingSpaceData,\r\n    changeTeachingSpaceCategoryFilter,\r\n    setTeachingSpaceInfo,\r\n    submitSubscribe,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(TeachingSpaceMaterialsList);"],"sourceRoot":""}
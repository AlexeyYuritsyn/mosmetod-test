{"version":3,"sources":["components/Forms/ShowHidePassword/ShowHidePassword.jsx","components/Forms/SignInForm.jsx","components/Pages/AuthorizeRegister/SignIn.jsx"],"names":["ShowHidePassword","inputBlock","document","querySelector","getAttribute","setAttribute","className","type","onChange","this","handleChange","React","Component","SignInForm","props","SignInSchema","Yup","email","required","password","min","initialValues","validationSchema","onSubmit","values","setSubmitting","fetch","then","response","block","status","classList","add","setTimeout","alert","JSON","stringify","remove","errors","touched","htmlFor","placeholder","name","component","SignIn"],"mappings":"mSAIqBA,G,oLAGb,IAAMC,EAAaC,SAASC,cAAc,mBAEtB,aADAF,EAAWG,aAAa,QAExCH,EAAWI,aAAa,OAAQ,QAEhCJ,EAAWI,aAAa,OAAQ,c,+BAKpC,OACI,2BAAOC,UAAU,wBAAjB,oGAEI,2BAAOA,UAAU,kBAAkBC,KAAK,WAAWC,SAAUC,KAAKC,oB,GAhBpCC,IAAMC,YCI/BC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,aAAeC,IAAW,CAC3BC,MAAOD,MACFC,MAAM,kFACNC,SAAS,oDACdC,SAAUH,MACLE,SAAS,mFACTE,IAAI,EAAG,2JATD,E,qDAcf,OACI,kBAAC,IAAD,CACIC,cAAe,CAACF,SAAU,GAAIF,MAAO,IACrCK,iBAAkBb,KAAKM,aAEvBQ,SAAU,SAACC,EAAD,GAA8B,IAApBC,EAAmB,EAAnBA,cAChBC,MAAM,wFACDC,MAAM,SAAAC,GACH,IAAMC,EAAQ3B,SAASC,cAAc,qBACb,MAApByB,EAASE,QACTD,EAAME,UAAUC,IAAI,yBAEpBC,YAAW,WACPC,MAAMC,KAAKC,UAAUZ,EAAQ,KAAM,IACnCC,GAAc,KACd,OAKJI,EAAME,UAAUM,OAAO,yBACvBZ,GAAc,UAM7B,gBAAEa,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAAV,OACG,kBAAC,IAAD,KACI,2BAAOjC,UAAU,aAAakC,QAAQ,SAAtC,SACA,kBAAC,IAAD,CACIlC,UAAWgC,EAAOrB,OAASsB,EAAQtB,MAAS,mBAAuB,aACnEwB,YAAY,mDACZC,KAAK,QACLnC,KAAK,UACT,kBAAC,IAAD,CACIoC,UAAU,MACVrC,UAAU,iBACVoC,KAAK,UACT,2BAAOpC,UAAU,aAAakC,QAAQ,YAAtC,wCACA,kBAAC,IAAD,CACIlC,UAAWgC,EAAOnB,UAAYoB,EAAQpB,SAAY,kCAAsC,4BACxFsB,YAAY,kFACZC,KAAK,WACLnC,KAAK,aACT,kBAAC,IAAD,CACIoC,UAAU,MACVrC,UAAU,iBACVoC,KAAK,aACT,kBAAC,IAAD,CACIC,UAAW3C,IACf,4BAAQM,UAAU,cAAcC,KAAK,SAArC,SACA,4BAAQD,UAAU,cAAcC,KAAK,UAArC,kB,GAnEgBI,IAAMC,WCJzBgC,E,uKAGb,OACI,oCACI,yBAAKtC,UAAU,0CAAf,mHACA,kBAAC,EAAD,W,GANoBK,IAAMC","file":"static/js/20.00bfbaf9.chunk.js","sourcesContent":["import './_show-hide-password.scss';\r\nimport React from 'react';\r\n\r\n\r\nexport default class ShowHidePassword extends React.Component {\r\n\r\n    handleChange() {\r\n        const inputBlock = document.querySelector('.input-password');\r\n        const typeOfInput = inputBlock.getAttribute('type');\r\n        if (typeOfInput === 'password') {\r\n            inputBlock.setAttribute('type', 'text');\r\n        } else {\r\n            inputBlock.setAttribute('type', 'password');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <label className=\"show-hide text-label\">\r\n                Показывать пароль\r\n                <input className=\"show-hide-input\" type=\"checkbox\" onChange={this.handleChange} />\r\n            </label>\r\n        )\r\n    }\r\n}","import './_forms.scss';\r\nimport React from 'react';\r\n// import 'babel-polyfill';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ShowHidePassword from './ShowHidePassword/ShowHidePassword';\r\n\r\n\r\nexport default class SignInForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.SignInSchema = Yup.object({\r\n            email: Yup.string()\r\n                .email('Неправильный email')\r\n                .required('Введите email'),\r\n            password: Yup.string()\r\n                .required('Введите пароль')\r\n                .min(6, 'Минимальная длина: 6 символов'),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{password: '', email: ''}}\r\n                validationSchema={this.SignInSchema}\r\n                // validateOnChange={false}\r\n                onSubmit={(values, {setSubmitting}) => {\r\n                    fetch('https://raw.githubusercontent.com/DmitryKeymakh/front/master/api/check-password.json')\r\n                        .then (response => {\r\n                            const block = document.querySelector('.check-in-warning');\r\n                            if (response.status === 200) {\r\n                                block.classList.add('check-in-warning-hide');\r\n\r\n                                setTimeout(() => {\r\n                                    alert(JSON.stringify(values, null, 2));\r\n                                    setSubmitting(false);\r\n                                 }, 400);\r\n\r\n                                // setSubmitting(true);\r\n                                // window.location.href = 'http://localhost:8081/';\r\n                            } else {\r\n                                block.classList.remove('check-in-warning-hide');\r\n                                setSubmitting(false);\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            >\r\n                {({errors, touched}) => (\r\n                    <Form>\r\n                        <label className=\"text-label\" htmlFor=\"email\">Email</label>\r\n                        <Field\r\n                            className={errors.email && touched.email ? ('text-input error') : ('text-input')}\r\n                            placeholder=\"Введите email\"\r\n                            name=\"email\"\r\n                            type=\"email\"/>\r\n                        <ErrorMessage\r\n                            component=\"div\"\r\n                            className=\"input-feedback\"\r\n                            name=\"email\"/>\r\n                        <label className=\"text-label\" htmlFor=\"password\">Пароль</label>\r\n                        <Field\r\n                            className={errors.password && touched.password ? ('text-input input-password error') : ('text-input input-password')}\r\n                            placeholder=\"Введите пароль\"\r\n                            name=\"password\"\r\n                            type=\"password\"/>\r\n                        <ErrorMessage\r\n                            component=\"div\"\r\n                            className=\"input-feedback\"\r\n                            name=\"password\"/>\r\n                        <Field\r\n                            component={ShowHidePassword}/>\r\n                        <button className=\"button-form\" type=\"reset\">Reset</button>\r\n                        <button className=\"button-form\" type=\"submit\">Submit</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport SignInForm from '../../Forms/SignInForm';\r\n\r\n\r\nexport default class SignIn extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"check-in-warning check-in-warning-hide\">Неверный email или пароль.</div>\r\n                <SignInForm />\r\n            </>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}
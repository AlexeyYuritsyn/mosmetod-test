{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/react-use/esm/useEffectOnce.js","../node_modules/react-use/esm/useMount.js","components/Pages/NewsFeed/NewsFeedListItem.jsx","components/Pages/NewsFeed/NewsFeedList.jsx"],"names":["_objectDestructuringEmpty","obj","TypeError","useEffectOnce","effect","useEffect","useMount","fn","connect","dispatch","bindActionCreators","props","newsFeedItem","className","hits","to","id","date","title","desc","newsFeedReducer","data","totalItemsCount","setInitialNewsFeedData","uploadNewsFeedData","dataLength","length","next","hasMore","loader","Preloader","map","item","key"],"mappings":"yHAAe,SAASA,EAA0BC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCADvC,mC,4CCIeC,EAHK,SAAUC,GAC1BC,oBAAUD,EAAQ,KCIPE,IALA,SAAUC,GACrBJ,GAAc,WACVI,S,+HCkDOC,eAJS,SAAC,GAAD,sBAAS,MAEN,SAAAC,GAAQ,OAAIC,YAAmB,GAAID,KAE/CD,EA7CU,SAACG,GAAW,IAE7BC,EACAD,EADAC,aAGJ,OACI,kBAAC,UAAD,CAASC,UAAWD,EAAaE,KAC7B,4CACA,kCACKC,GAAE,qBAAgBH,EAAaI,KACpC,yBAAKH,UAAU,wCACVD,EAAaK,MAElB,yBAAKJ,UAAU,8CAEPD,EAAaM,OACb,yBAAKL,UAAU,yCACVD,EAAaM,OAIlBN,EAAaO,MACb,yBAAKN,UAAU,wCACVD,EAAaO,MAIlBP,EAAaE,MACb,yBAAKD,UAAU,oDAAf,6C,SC+BLL,uBAVS,SAAC,GAAD,IAAEY,EAAF,EAAEA,gBAAF,MAAwB,CAC5CC,KAAMD,EAAgBC,KACtBC,gBAAiBF,EAAgBE,oBAGV,SAAAb,GAAQ,OAAIC,YAAmB,CACtDa,2BACAC,wBACDf,KAEYD,EApDM,SAACG,GAAW,IAEzBU,EAIAV,EAJAU,KACAC,EAGAX,EAHAW,gBACAC,EAEAZ,EAFAY,uBACAC,EACAb,EADAa,mBAWJ,OARAlB,aAAS,WACLiB,OAQA,oCACI,kBAAC,IAAD,CACIE,WAAYJ,EAAKK,OACjBC,KARZ,WACIH,KAQQI,QAASN,IAAoBD,EAAKK,OAClCG,OAAQ,kBAACC,EAAA,EAAD,OAER,yBAAKjB,UAAU,8BAEPQ,EAAKU,KAAI,SAACC,GAAD,OACL,kBAAC,EAAD,CAAkBC,IAAKD,EAAKhB,GAAIJ,aAAcoB","file":"static/js/27.4ac40579.chunk.js","sourcesContent":["export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import { useEffect } from 'react';\nvar useEffectOnce = function (effect) {\n    useEffect(effect, []);\n};\nexport default useEffectOnce;\n","import useEffectOnce from './useEffectOnce';\nvar useMount = function (fn) {\n    useEffectOnce(function () {\n        fn();\n    });\n};\nexport default useMount;\n","import \"./_news-feed.scss\";\r\nimport React from 'react';\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst NewsFeedListItem = (props) => {\r\n    const {\r\n        newsFeedItem,\r\n    } = props;\r\n\r\n    return (\r\n        <NavLink className={newsFeedItem.hits ?\r\n            'news-feed-tabs-tab-content-item-important' :\r\n            'news-feed-tabs-tab-content-item'}\r\n                 to={`/news-feed/${newsFeedItem.id}`}>\r\n            <div className=\"news-feed-tabs-tab-content-item-date\">\r\n                {newsFeedItem.date}\r\n            </div>\r\n            <div className=\"news-feed-tabs-tab-content-item-text-block\">\r\n                {\r\n                    newsFeedItem.title &&\r\n                    <div className=\"news-feed-tabs-tab-content-item-title\">\r\n                        {newsFeedItem.title}\r\n                    </div>\r\n                }\r\n                {\r\n                    newsFeedItem.desc &&\r\n                    <div className=\"news-feed-tabs-tab-content-item-desc\">\r\n                        {newsFeedItem.desc}\r\n                    </div>\r\n                }\r\n                {\r\n                    newsFeedItem.hits &&\r\n                    <div className=\"news-feed-tabs-tab-content-item-important-marker\">\r\n                        Важное\r\n                    </div>\r\n                }\r\n            </div>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nNewsFeedListItem.propTypes = {\r\n    newsFeedItem: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({}) => ({});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(NewsFeedListItem);","import React from 'react';\r\nimport \"./_news-feed.scss\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    setInitialNewsFeedData,\r\n    uploadNewsFeedData,\r\n} from \"../../../actions/newsFeedAction\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport NewsFeedListItem from \"./NewsFeedListItem\";\r\nimport {useMount} from 'react-use';\r\n\r\n\r\nconst NewsFeedList = (props) => {\r\n    const {\r\n        data,\r\n        totalItemsCount,\r\n        setInitialNewsFeedData,\r\n        uploadNewsFeedData,\r\n    } = props;\r\n\r\n    useMount(() => {\r\n        setInitialNewsFeedData();\r\n    });\r\n\r\n    function loadMore() {\r\n        uploadNewsFeedData();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <InfiniteScroll\r\n                dataLength={data.length}\r\n                next={loadMore}\r\n                hasMore={totalItemsCount !== data.length}\r\n                loader={<Preloader/>}\r\n            >\r\n                <div className=\"news-feed-tabs-tab-content\">\r\n                    {\r\n                        data.map((item) => (\r\n                            <NewsFeedListItem key={item.id} newsFeedItem={item}/>\r\n                        ))}\r\n                </div>\r\n            </InfiniteScroll>\r\n        </>\r\n    )\r\n}\r\n\r\nNewsFeedList.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    totalItemsCount: PropTypes.number.isRequired,\r\n    setInitialNewsFeedData: PropTypes.func.isRequired,\r\n    uploadNewsFeedData: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({newsFeedReducer}) => ({\r\n    data: newsFeedReducer.data,\r\n    totalItemsCount: newsFeedReducer.totalItemsCount,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setInitialNewsFeedData,\r\n    uploadNewsFeedData,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(NewsFeedList);"],"sourceRoot":""}
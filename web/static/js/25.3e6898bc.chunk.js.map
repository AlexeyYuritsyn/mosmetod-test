{"version":3,"sources":["components/Forms/SignUpForm.jsx","components/Pages/AuthorizeRegister/SignUp.jsx"],"names":["SignUpForm","props","SignUpSchema","Yup","name","required","max","email","test","a","fetch","status","password","min","matches","passwordRepeat","oneOf","initialValues","validationSchema","this","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","errors","touched","className","htmlFor","placeholder","type","component","React","Component","SignUp"],"mappings":"oSAOqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,aAAeC,IAAW,CAC3BC,KAAMD,MACDE,SAAS,iEACTC,IAAI,IAAK,0GAEdC,MAAOJ,MACFI,MAAM,2GACNF,SAAS,6EACTG,KACG,iBACA,qOALD,sBAOC,sBAAAC,EAAA,sEAAmBC,MAAM,wFAAzB,0BAAkHC,OAAlH,kBAA6H,MAA7H,kDAIRC,SAAUT,MACLE,SAAS,mFACTQ,IAAI,EAAG,yJACPP,IAAI,GAAI,gKACRQ,QAAQ,gBAAiB,sVAC9BC,eAAgBZ,MACXa,MAAM,CAACb,IAAQ,YAAa,MAAO,sIAzB7B,E,qDA6Bf,OACI,kBAAC,IAAD,CACIc,cAAe,CAAEb,KAAM,GAAIG,MAAO,GAAIK,SAAU,GAAGG,eAAgB,IACnEG,iBAAkBC,KAAKjB,aACvBkB,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACjBC,YAAW,WACPC,MAAMC,KAAKC,UAAUL,EAAQ,KAAM,IACnCC,GAAc,KACf,QAGN,gBAAGK,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACG,kBAAC,IAAD,KACI,2BAAOC,UAAU,aAAaC,QAAQ,QAAtC,iEACA,kBAAC,IAAD,CACID,UAAWF,EAAOvB,MAAQwB,EAAQxB,KAAQ,mBAAuB,aACjE2B,YAAY,2JACZ3B,KAAK,OACL4B,KAAK,SACT,kBAAC,IAAD,CACIC,UAAU,MACVJ,UAAU,iBACVzB,KAAK,SACT,2BAAOyB,UAAU,aAAaC,QAAQ,SAAtC,SACA,kBAAC,IAAD,CACID,UAAWF,EAAOpB,OAASqB,EAAQrB,MAAS,mBAAuB,aACnEwB,YAAY,mDACZ3B,KAAK,QACL4B,KAAK,UACT,kBAAC,IAAD,CACIC,UAAU,MACVJ,UAAU,iBACVzB,KAAK,UACT,2BAAOyB,UAAU,aAAaC,QAAQ,YAAtC,wCACA,kBAAC,IAAD,CACID,UAAWF,EAAOf,UAAYgB,EAAQhB,SAAY,kCAAsC,4BACxFmB,YAAY,kFACZ3B,KAAK,WACL4B,KAAK,aACT,kBAAC,IAAD,CACIC,UAAU,MACVJ,UAAU,iBACVzB,KAAK,aACT,2BAAOyB,UAAU,aAAaC,QAAQ,kBAAtC,+FACA,kBAAC,IAAD,CACID,UAAWF,EAAOZ,gBAAkBa,EAAQb,eAAkB,kCAAsC,4BACpGgB,YAAY,8FACZ3B,KAAK,iBACL4B,KAAK,aACT,kBAAC,IAAD,CACIC,UAAU,MACVJ,UAAU,iBACVzB,KAAK,mBACT,4BAAQyB,UAAU,cAAcG,KAAK,SAArC,SACA,4BAAQH,UAAU,cAAcG,KAAK,UAArC,kB,GApFgBE,IAAMC,WCHzBC,E,uKAGb,OACI,oCACI,kBAAC,EAAD,W,GALoBF,IAAMC","file":"static/js/25.3e6898bc.chunk.js","sourcesContent":["import './_forms.scss';\r\nimport React from 'react';\r\n// import 'babel-polyfill';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nexport default class SignUpForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.SignUpSchema = Yup.object({\r\n            name: Yup.string()\r\n                .required('Введите ФИО')\r\n                .max(100, 'Не больше 100 символов'),\r\n                // .matches(//, ''),\r\n            email: Yup.string()\r\n                .email('Неправильный имейл')\r\n                .required('Введите имейл')\r\n                .test(\r\n                    'password-check',\r\n                    'Пользователь с таким email уже зарегистрирован',\r\n                    // async (value) => (await fetch('/password-check/' + value)).responseText === 'true',\r\n                    async () => (await fetch('https://raw.githubusercontent.com/DmitryKeymakh/front/master/api/check-password.json')).status !== 200,\r\n                    // () => false,\r\n                    // () => true,\r\n                ),\r\n            password: Yup.string()\r\n                .required('Введите пароль')\r\n                .min(6, 'Минимальная длина: 6 символов')\r\n                .max(20, 'Максимальная длина: 20 символов')\r\n                .matches(/[a-zA-Z0-9]\\w/, 'Используйте латинские буквы, цифры и знак нижнего подчеркивания'),\r\n            passwordRepeat: Yup.string()\r\n                .oneOf([Yup.ref('password'), null], 'Пароль должен совпадать')\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{ name: '', email: '', password: '',passwordRepeat: '' }}\r\n                validationSchema={this.SignUpSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setTimeout(() => {\r\n                        alert(JSON.stringify(values, null, 2));\r\n                        setSubmitting(false);\r\n                    }, 400);\r\n                }}\r\n            >\r\n                {({ errors, touched }) => (\r\n                    <Form>\r\n                        <label className=\"text-label\" htmlFor=\"name\">Введите ФИО</label>\r\n                        <Field\r\n                            className={errors.name && touched.name ? ('text-input error') : ('text-input')}\r\n                            placeholder=\"Мнацаканян Армен Валерьевич\"\r\n                            name=\"name\"\r\n                            type=\"text\"/>\r\n                        <ErrorMessage\r\n                            component=\"div\"\r\n                            className=\"input-feedback\"\r\n                            name=\"name\"/>\r\n                        <label className=\"text-label\" htmlFor=\"email\">Email</label>\r\n                        <Field\r\n                            className={errors.email && touched.email ? ('text-input error') : ('text-input')}\r\n                            placeholder=\"Введите email\"\r\n                            name=\"email\"\r\n                            type=\"email\"/>\r\n                        <ErrorMessage\r\n                            component=\"div\"\r\n                            className=\"input-feedback\"\r\n                            name=\"email\"/>\r\n                        <label className=\"text-label\" htmlFor=\"password\">Пароль</label>\r\n                        <Field\r\n                            className={errors.password && touched.password ? ('text-input input-password error') : ('text-input input-password')}\r\n                            placeholder=\"Введите пароль\"\r\n                            name=\"password\"\r\n                            type=\"password\"/>\r\n                        <ErrorMessage\r\n                            component=\"div\"\r\n                            className=\"input-feedback\"\r\n                            name=\"password\"/>\r\n                        <label className=\"text-label\" htmlFor=\"passwordRepeat\">Повторите пароль</label>\r\n                        <Field\r\n                            className={errors.passwordRepeat && touched.passwordRepeat ? ('text-input input-password error') : ('text-input input-password')}\r\n                            placeholder=\"Повторите пароль\"\r\n                            name=\"passwordRepeat\"\r\n                            type=\"password\"/>\r\n                        <ErrorMessage\r\n                            component=\"div\"\r\n                            className=\"input-feedback\"\r\n                            name=\"passwordRepeat\"/>\r\n                        <button className=\"button-form\" type=\"reset\">Reset</button>\r\n                        <button className=\"button-form\" type=\"submit\">Submit</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport SignUpForm from '../../Forms/SignUpForm';\r\n\r\n\r\nexport default class SignUp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <SignUpForm />\r\n            </>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}
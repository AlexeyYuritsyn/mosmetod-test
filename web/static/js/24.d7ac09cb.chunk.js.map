{"version":3,"sources":["components/Pages/AboutTheCenter/Staff/StaffCategoryItem.jsx","components/Pages/AboutTheCenter/Staff/Staff.jsx"],"names":["connect","aboutTheCenterReducer","dispatch","bindActionCreators","setPersonId","props","data","StaffItem","StaffItemLink","className","to","users_id","onClick","src","users_image","DefaultImage","alt","users_fio","StaffItemBlock","link","dangerouslySetInnerHTML","__html","users_description","name","user","map","item","key","Staff","staffData","setStaffData","setPersonData","url","api","useEffect","a","axios","result","fetchData","MyErrorBoundary","blockName","fallback","Preloader","id"],"mappings":"yTAoGeA,eANS,SAAC,GAAD,EAAEC,sBAAF,MAA8B,MAE3B,SAAAC,GAAQ,OAAIC,YAAmB,CACtDC,iBACDF,KAEYF,EAxFW,SAACK,GAAW,IAE3BC,EAAqBD,EAArBC,KAAMF,EAAeC,EAAfD,YAEPG,EAAY,SAACF,GAAW,IAEnBC,EAAQD,EAARC,KAEDE,EAAgB,WAClB,OACI,kBAAC,OAAD,CACIC,UAAU,kBACVC,GAAE,uBAAkBJ,EAAKK,UACzBC,QAAS,WACLR,EAAYE,EAAKK,YAGrB,yBAAKF,UAAU,yBACX,yBACIA,UAAU,mBACVI,IAAKP,EAAKQ,YAAcR,EAAKQ,YAAcC,IAC3CC,IAAKV,EAAKW,aAGlB,wBAAIR,UAAU,mBACTH,EAAKW,aAMhBC,EAAiB,WACnB,OACI,yBAAKT,UAAU,mBACX,yBAAKA,UAAU,yBACX,yBACIA,UAAU,mBACVI,IAAKP,EAAKQ,YAAcR,EAAKQ,YAAcC,IAC3CC,IAAKV,EAAKW,aAGlB,wBAAIR,UAAU,mBACTH,EAAKW,aAMtB,OACI,yBAAKR,UAAU,cAEPH,EAAKa,KAED,kBAACX,EAAD,MAEA,kBAACU,EAAD,MAER,yBACIT,UAAU,kBACVW,wBAAyB,CAACC,OAAQf,EAAKgB,uBAKvD,OACI,yBAAKb,UAAU,sBACX,wBAAIA,UAAU,wBACTH,EAAKiB,MAEV,yBAAKd,UAAU,sBACVH,EAAKkB,KAAKC,KAAI,SAAAC,GAAI,OACf,kBAACnB,EAAD,CAAWoB,IAAKD,EAAKf,SAAUL,KAAMoB,Y,gBCnE5CE,EAAQ,SAACvB,GAAW,IAEtBwB,EAA0CxB,EAA1CwB,UAAWC,EAA+BzB,EAA/ByB,cAElBC,EAFiD1B,EAAjB0B,eAElB,IAEd,IAAMC,EAAMC,IAAIJ,UAahB,OAVAK,qBAAU,YACS,uCAAG,4BAAAC,EAAA,sEACOC,IACjBJ,GAFU,OACRK,EADQ,OAIdP,EAAaO,EAAO/B,MAJN,2CAAH,qDAMfgC,KACD,CAACN,IAGA,yBAAKvB,UAAU,iBACX,kBAAC8B,EAAA,EAAD,CAAiBC,UAAW,oDACxB,kBAAC,WAAD,CAAUC,SAAU,kBAACC,EAAA,EAAD,OACfb,EAAUJ,KAAI,SAAAC,GAAI,OACf,kBAAC,EAAD,CAAmBC,IAAKD,EAAKiB,GAAIrC,KAAMoB,WAuBhD1B,uBATS,SAAC,GAAD,MAA8B,CAClD6B,UADoB,EAAE5B,sBACW4B,cAGV,SAAA3B,GAAQ,OAAIC,YAAmB,CACtD2B,iBACAC,mBACD7B,KAEYF,CAGb4B","file":"static/js/24.d7ac09cb.chunk.js","sourcesContent":["import './_staff.scss';\r\nimport DefaultImage from '../../../../assets/images/anonymous.png';\r\nimport React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    setPersonId,\r\n} from \"../../../../actions/aboutTheCenterAction\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst StaffCategoryItem = (props) => {\r\n\r\n    const {data, setPersonId} = props;\r\n\r\n    const StaffItem = (props) => {\r\n\r\n        const {data} = props;\r\n\r\n        const StaffItemLink = () => {\r\n            return (\r\n                <Link\r\n                    className=\"staff-item-wrap\"\r\n                    to={`staff/person/${data.users_id}`}\r\n                    onClick={() => {\r\n                        setPersonId(data.users_id)\r\n                    }}\r\n                >\r\n                    <div className=\"staff-item-image-wrap\">\r\n                        <img\r\n                            className=\"staff-item-image\"\r\n                            src={data.users_image ? data.users_image : DefaultImage}\r\n                            alt={data.users_fio}\r\n                        />\r\n                    </div>\r\n                    <h4 className=\"staff-item-name\">\r\n                        {data.users_fio}\r\n                    </h4>\r\n                </Link>\r\n            )\r\n        }\r\n\r\n        const StaffItemBlock = () => {\r\n            return (\r\n                <div className=\"staff-item-wrap\">\r\n                    <div className=\"staff-item-image-wrap\">\r\n                        <img\r\n                            className=\"staff-item-image\"\r\n                            src={data.users_image ? data.users_image : DefaultImage}\r\n                            alt={data.users_fio}\r\n                        />\r\n                    </div>\r\n                    <h4 className=\"staff-item-name\">\r\n                        {data.users_fio}\r\n                    </h4>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"staff-item\">\r\n                {\r\n                    data.link\r\n                        ?\r\n                        <StaffItemLink />\r\n                        :\r\n                        <StaffItemBlock />\r\n                }\r\n                <div\r\n                    className=\"staff-item-text\"\r\n                    dangerouslySetInnerHTML={{__html: data.users_description}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n        <div className=\"staff-content-wrap\">\r\n            <h3 className=\"staff-content-header\">\r\n                {data.name}\r\n            </h3>\r\n            <div className=\"staff-content-item\">\r\n                {data.user.map(item =>\r\n                    <StaffItem key={item.users_id} data={item} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nStaffCategoryItem.propTypes = {\r\n    setPersonData: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({aboutTheCenterReducer}) => ({});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setPersonId,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(StaffCategoryItem);","import './_staff.scss';\r\nimport api from \"../../../../assets/api\";\r\nimport React, {Suspense, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport StaffCategoryItem from './StaffCategoryItem';\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    setStaffData,\r\n    setPersonData,\r\n} from \"../../../../actions/aboutTheCenterAction\";\r\nimport MyErrorBoundary from \"../../../ErrorBoundary/MyErrorBoundary\";\r\nimport Preloader from \"../../../Preloader/Preloader\";\r\n\r\n\r\nexport const Staff = (props) => {\r\n\r\n    const {staffData, setStaffData, setPersonData} = props;\r\n\r\n    setPersonData({});\r\n\r\n    const url = api.staffData;\r\n    // const url = '/api/staff.json';\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios(\r\n                url,\r\n            );\r\n            setStaffData(result.data);\r\n        };\r\n        fetchData();\r\n    }, [url]);\r\n\r\n    return(\r\n        <div className=\"staff-content\">\r\n            <MyErrorBoundary blockName={'Персонал'}>\r\n                <Suspense fallback={<Preloader/>}>\r\n                    {staffData.map(item =>\r\n                        <StaffCategoryItem key={item.id} data={item} />\r\n                    )}\r\n                </Suspense>\r\n            </MyErrorBoundary>\r\n        </div>\r\n    )\r\n}\r\n\r\nStaff.propTypes = {\r\n    staffData: PropTypes.array.isRequired,\r\n    setStaffData: PropTypes.func.isRequired,\r\n    setPersonData: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({aboutTheCenterReducer}) => ({\r\n    staffData: aboutTheCenterReducer.staffData,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setStaffData,\r\n    setPersonData,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Staff);"],"sourceRoot":""}
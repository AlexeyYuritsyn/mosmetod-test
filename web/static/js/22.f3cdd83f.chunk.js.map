{"version":3,"sources":["components/Pages/NewsFeed/icons/gear-icon.svg","components/Pages/NewsFeed/DropFilterBlock.jsx","components/Pages/NewsFeed/NewsFeedWebinarsItem.jsx","components/Pages/NewsFeed/NewsFeedWebinars.jsx","components/Pages/NewsFeed/NewsFeedMobileSelectSelect.jsx","components/Pages/NewsFeed/NewsFeed.jsx"],"names":["module","exports","connect","newsFeedReducer","showDropDown","timeFilter","startDateRange","endDateRange","dispatch","bindActionCreators","setShowDropDown","changeNewsFeedTimeFilter","props","useState","time","setTime","Date","startDate","setStartDate","endDate","setEndDate","useEffect","mounted","className","onOutsideClick","onClick","src","gearIcon","alt","id","title","name","map","item","key","handleTimeButton","tabIndex","selected","onChange","date","selectsStart","dateFormat","placeholderText","format","calendarClassName","selectsEnd","minDate","startDateFilter","endDateFilter","NewsFeedWebinarsItem","data","webinarUrl","youtube_url","href","target","rel","replace","category","description","webinarsData","totalItemsCount","webinarsCategory","webinarsFilters","uploadWebinarsData","changeWebinarsFilter","MyErrorBoundary","fallback","Preloader","dataLength","length","next","hasMore","loader","handleFilterClick","isSelectOpen","setIsSelectOpen","viewBox","xmlns","d","NewsFeedList","React","lazy","activeTabIndex","newsCategory","setActiveTabIndex","changeNewsFeedTab","categoryList","selectedIndex","onSelect","handleTabClick"],"mappings":"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","file":"static/js/22.f3cdd83f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gear-icon.ec291ece.svg\";","import \"./_news-feed.scss\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport {format} from 'date-fns';\r\nimport gearIcon from './icons/gear-icon.svg';\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    setShowDropDown,\r\n    changeNewsFeedTimeFilter,\r\n} from \"../../../actions/newsFeedAction\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\n\r\n\r\nconst DropFilterBlock = (props) => {\r\n    const {\r\n        showDropDown,\r\n        timeFilter,\r\n        startDateRange,\r\n        endDateRange,\r\n        setShowDropDown,\r\n        changeNewsFeedTimeFilter,\r\n    } = props;\r\n\r\n    const [time, setTime] = useState(timeFilter);\r\n    const [startDate, setStartDate] = useState(startDateRange ? new Date(startDateRange) : '');\r\n    const [endDate, setEndDate] = useState(endDateRange ? new Date(endDateRange) : '');\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (mounted) {\r\n            setTime(timeFilter);\r\n        }\r\n        return () => mounted = false;\r\n    }, [timeFilter]);\r\n\r\n    const timeList = [\r\n        {\r\n            id: 1,\r\n            title: 'за сутки',\r\n            name: 'day'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'за неделю',\r\n            name: 'week'\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'за месяц',\r\n            name: 'month'\r\n        },\r\n        {\r\n            id: 4,\r\n            title: 'за все время',\r\n            name: 'all'\r\n        }\r\n    ];\r\n\r\n    const toggleDropdown = () => {\r\n        setShowDropDown(!showDropDown);\r\n    }\r\n\r\n    const handleTimeButton = (item) => {\r\n        setTime(item.name);\r\n        setStartDate('');\r\n        setEndDate('');\r\n    }\r\n\r\n    const applyAll = () => {\r\n        const startDateFilter = startDate ? format(startDate, 'yyyy-MM-dd') : '';\r\n        const endDateFilter = endDate ? format(endDate, 'yyyy-MM-dd') : '';\r\n        const timeFilter = startDate && endDate ? '' : time;\r\n        setShowDropDown(false);\r\n        changeNewsFeedTimeFilter(timeFilter, startDateFilter, endDateFilter);\r\n    }\r\n\r\n    return (\r\n        <div className=\"news-feed-filter-drop-wrap\">\r\n            <OutsideClickHandler\r\n                onOutsideClick={() => {\r\n                    setShowDropDown(false);\r\n                }}>\r\n                <div className=\"news-feed-filter-drop-button\" onClick={toggleDropdown}>\r\n                    <img src={gearIcon} alt=\"+\"/>\r\n                </div>\r\n                {\r\n                    showDropDown &&\r\n                    <div className=\"news-feed-filter-drop-block\">\r\n                        <div className=\"news-feed-filter-drop-block-left\">\r\n                            {\r\n                                timeList.map((item) => (\r\n                                    <div className={item.name === time ?\r\n                                        \"news-feed-filter-drop-block-period-button-active\" :\r\n                                        \"news-feed-filter-drop-block-period-button\"}\r\n                                         key={item.id}\r\n                                         onClick={() => handleTimeButton(item)}>\r\n                                        {item.title}\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"news-feed-filter-drop-block-right\">\r\n                            <div className=\"news-feed-filter-drop-block-header\">\r\n                                дата/период\r\n                            </div>\r\n                            <div className=\"news-feed-filter-drop-block-period-wrap\">\r\n                                от\r\n                                <DatePicker\r\n                                    className=\"news-feed-filter-date-input\"\r\n                                    tabIndex=\"1\"\r\n                                    selected={startDate}\r\n                                    onChange={date => setStartDate(date)}\r\n                                    selectsStart\r\n                                    startDate={startDate}\r\n                                    endDate={endDate}\r\n                                    dateFormat=\"dd.MM.yyyy\"\r\n                                    placeholderText={format(new Date(), 'dd.MM.yyyy')}\r\n                                    calendarClassName=\"news-feed-filter-calendar\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"news-feed-filter-drop-block-period-wrap\">\r\n                                до\r\n                                <DatePicker\r\n                                    className=\"news-feed-filter-date-input\"\r\n                                    tabIndex=\"1\"\r\n                                    selected={endDate}\r\n                                    onChange={date => setEndDate(date)}\r\n                                    selectsEnd\r\n                                    startDate={startDate}\r\n                                    endDate={endDate}\r\n                                    minDate={startDate}\r\n                                    dateFormat=\"dd.MM.yyyy\"\r\n                                    placeholderText={format(new Date(), 'dd.MM.yyyy')}\r\n                                    calendarClassName=\"news-feed-filter-calendar\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"news-feed-filter-drop-block-apply-button\"\r\n                                 onClick={applyAll}>\r\n                                Применить\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </OutsideClickHandler>\r\n        </div>\r\n    );\r\n}\r\n\r\nDropFilterBlock.propTypes = {\r\n    showDropDown: PropTypes.bool.isRequired,\r\n    timeFilter: PropTypes.string.isRequired,\r\n    startDateRange: PropTypes.string.isRequired,\r\n    endDateRange: PropTypes.string.isRequired,\r\n    setShowDropDown: PropTypes.func.isRequired,\r\n    changeNewsFeedTimeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({newsFeedReducer}) => ({\r\n    showDropDown: newsFeedReducer.showDropDown,\r\n    timeFilter: newsFeedReducer.timeFilter,\r\n    startDateRange: newsFeedReducer.startDateRange,\r\n    endDateRange: newsFeedReducer.endDateRange,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setShowDropDown,\r\n    changeNewsFeedTimeFilter,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(DropFilterBlock);","import React from 'react';\r\nimport \"./_news-feed.scss\";\r\n\r\n\r\nfunction NewsFeedWebinarsItem(props) {\r\n\r\n    const {data} = props;\r\n\r\n    const webinarUrl = data.youtube_url;\r\n\r\n    return (\r\n        <>\r\n            <a className=\"news-feed-webinars-item-block fade-in\" href={webinarUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <div className=\"news-feed-webinars-item-desc\">\r\n                    <div className=\"news-feed-webinars-item-video-wrap\">\r\n                        {\r\n                            webinarUrl &&\r\n                            <img className=\"news-feed-webinars-item-video\" src={`http://img.youtube.com/vi/${webinarUrl.replace(/.*\\/+/gim, '')}/mqdefault.jpg`} alt=\"видео\"/>\r\n                        }\r\n                    </div>\r\n                    <div className=\"news-feed-webinars-item-title\">\r\n                        <div className=\"news-feed-webinars-item-category\">{data.category}</div>\r\n                        <div className=\"news-feed-webinars-item-date\">{data.date}</div>\r\n                        <div className=\"news-feed-webinars-item-title-text\">{data.title}</div>\r\n                    </div>\r\n                    <div className=\"news-feed-webinars-item-desc-text\">\r\n                        {data.description}\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewsFeedWebinarsItem;","import React, {Suspense} from 'react';\r\nimport \"./_news-feed.scss\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    uploadWebinarsData,\r\n    changeWebinarsFilter,\r\n} from \"../../../actions/newsFeedAction\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport MyErrorBoundary from \"../../ErrorBoundary/MyErrorBoundary\";\r\nimport NewsFeedWebinarsItem from \"./NewsFeedWebinarsItem\";\r\n\r\n\r\nconst NewsFeedWebinars = (props) => {\r\n    const {\r\n        webinarsData,\r\n        webinarsCategory,\r\n        webinarsFilters,\r\n        totalItemsCount,\r\n        uploadWebinarsData,\r\n        changeWebinarsFilter,\r\n    } = props;\r\n\r\n    const handleAllFilterClick = () => {\r\n        changeWebinarsFilter(0);\r\n    }\r\n\r\n    const handleFilterClick = (item) => {\r\n        changeWebinarsFilter(item.id);\r\n    }\r\n\r\n    function loadMore() {\r\n        uploadWebinarsData();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"news-feed-webinars-wrap\">\r\n                <div className=\"news-feed-webinars-list-block\">\r\n                    <MyErrorBoundary>\r\n                        <Suspense fallback={<Preloader/>}>\r\n                            <InfiniteScroll\r\n                                dataLength={webinarsData.length}\r\n                                next={loadMore}\r\n                                hasMore={totalItemsCount !== webinarsData.length}\r\n                                loader={<Preloader/>}\r\n                            >\r\n                                <div className=\"news-feed-webinars-list\">\r\n                                    {\r\n                                        webinarsData.map((item) =>\r\n                                            <NewsFeedWebinarsItem\r\n                                                key={item.id}\r\n                                                data={item}/>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </InfiniteScroll>\r\n                        </Suspense>\r\n                    </MyErrorBoundary>\r\n                </div>\r\n                <div className=\"news-feed-webinars-filter-block\">\r\n                    <div className=\"news-feed-webinars-filter-block-header\">\r\n                        Выбор категории\r\n                    </div>\r\n                    {\r\n                        webinarsFilters.length > 1 &&\r\n                        <div className=\"news-feed-webinars-filter-list\">\r\n                            <div className={webinarsCategory === 0\r\n                                ? 'news-feed-webinars-filter-all-button-active'\r\n                                : 'news-feed-webinars-filter-all-button'}\r\n                                 onClick={handleAllFilterClick}>\r\n                                Все\r\n                            </div>\r\n                            {\r\n                                webinarsFilters.map((item) =>\r\n                                    <div key={item.id}\r\n                                         className={item.id === webinarsCategory\r\n                                             ? 'news-feed-webinars-filter-button-active'\r\n                                             : 'news-feed-webinars-filter-button'}\r\n                                         onClick={() => handleFilterClick(item)}>\r\n                                        <div className=\"news-feed-webinars-filter-button-marker\" />\r\n                                        {item.title}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nNewsFeedWebinars.propTypes = {\r\n    webinarsData: PropTypes.array.isRequired,\r\n    webinarsFilters: PropTypes.array.isRequired,\r\n    webinarsCategory: PropTypes.number.isRequired,\r\n    totalItemsCount: PropTypes.number.isRequired,\r\n    uploadWebinarsData: PropTypes.func.isRequired,\r\n    changeWebinarsFilter: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = ({newsFeedReducer}) => ({\r\n    webinarsData: newsFeedReducer.webinarsData,\r\n    totalItemsCount: newsFeedReducer.totalItemsCount,\r\n    webinarsCategory: newsFeedReducer.webinarsCategory,\r\n    webinarsFilters: newsFeedReducer.webinarsFilters,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    uploadWebinarsData,\r\n    changeWebinarsFilter,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(NewsFeedWebinars);","import React, {useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {changeWebinarsFilter} from \"../../../actions/newsFeedAction\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\n\r\n\r\nconst NewsFeedMobileSelectSelect = (props) => {\r\n    const {\r\n        webinarsCategory,\r\n        webinarsFilters,\r\n        changeWebinarsFilter,\r\n    } = props;\r\n\r\n    const [isSelectOpen, setIsSelectOpen] = useState(false);\r\n\r\n    const handleAllFilterClick = () => {\r\n        changeWebinarsFilter(0);\r\n        setIsSelectOpen(false);\r\n    }\r\n\r\n    const handleFilterClick = (item) => {\r\n        changeWebinarsFilter(item.id);\r\n        setIsSelectOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"news-feed-webinars-filter-select\">\r\n            <div className=\"news-feed-webinars-filter-select-header-block\"\r\n            onClick={() => setIsSelectOpen(!isSelectOpen)}>\r\n                <div className=\"news-feed-webinars-filter-select-header-title\">\r\n                    Выбор категории\r\n                    <svg className={isSelectOpen ?\r\n                        \"news-feed-webinars-filter-select-chevron-active\" :\r\n                        \"news-feed-webinars-filter-select-chevron\"}\r\n                         viewBox=\"0 0 19 12\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M2.76499 11.5762L9.57876 4.77725L16.3925 11.5762L18.4856 9.48306L9.57876 0.576172L0.671875 9.48306L2.76499 11.5762Z\" />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            {\r\n                isSelectOpen &&\r\n                <div className=\"news-feed-webinars-filter-select-list\">\r\n                    <div className={webinarsCategory === 0\r\n                        ? 'news-feed-webinars-filter-select-mobile-all-button-active'\r\n                        : 'news-feed-webinars-filter-select-mobile-all-button'}\r\n                         onClick={handleAllFilterClick}>\r\n                        Все\r\n                    </div>\r\n                    {\r\n                        webinarsFilters.map((item) =>\r\n                            <div key={item.id}\r\n                                 className={item.id === webinarsCategory\r\n                                     ? 'news-feed-webinars-filter-select-mobile-button-active'\r\n                                     : 'news-feed-webinars-filter-select-mobile-button'}\r\n                                 onClick={() => handleFilterClick(item)}>\r\n                                <div className=\"news-feed-webinars-filter-button-marker\" />\r\n                                {item.title}\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nNewsFeedMobileSelectSelect.propTypes = {\r\n    webinarsCategory: PropTypes.number.isRequired,\r\n    changeWebinarsFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({newsFeedReducer}) => ({\r\n    webinarsCategory: newsFeedReducer.webinarsCategory,\r\n    webinarsFilters: newsFeedReducer.webinarsFilters,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    changeWebinarsFilter,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(NewsFeedMobileSelectSelect);","import React, {Suspense} from 'react';\r\nimport {Tab, Tabs, TabList, TabPanel} from 'react-tabs';\r\nimport \"./_news-feed.scss\";\r\nimport DropFilterBlock from \"./DropFilterBlock\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {\r\n    setActiveTabIndex,\r\n    changeNewsFeedTab,\r\n} from \"../../../actions/newsFeedAction\";\r\nimport MyErrorBoundary from \"../../ErrorBoundary/MyErrorBoundary\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport NewsFeedWebinars from \"./NewsFeedWebinars\";\r\nimport NewsFeedMobileSelectSelect from \"./NewsFeedMobileSelectSelect\";\r\n\r\nconst NewsFeedList = React.lazy(() => import('./NewsFeedList'));\r\n\r\n\r\nconst NewsFeed = (props) => {\r\n    const {\r\n        activeTabIndex,\r\n        newsCategory,\r\n        setActiveTabIndex,\r\n        changeNewsFeedTab,\r\n    } = props;\r\n\r\n    const categoryList = [\r\n        {\r\n            id: 1,\r\n            category: 'Оперативная информация'\r\n        },\r\n        {\r\n            id: 2,\r\n            category: 'Анонсы'\r\n        },\r\n        {\r\n            id: 3,\r\n            category: 'СМИ о нас'\r\n        },\r\n        {\r\n            id: 4,\r\n            category: 'Вебинары'\r\n        }\r\n    ];\r\n\r\n    const handleTabClick = (item) => {\r\n        changeNewsFeedTab(item.category);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"news-feed-main-wrap\">\r\n                <Tabs className=\"news-feed-tabs\"\r\n                      selectedIndex={activeTabIndex}\r\n                      onSelect={tabIndex => setActiveTabIndex(tabIndex)}>\r\n                    <TabList className=\"news-feed-tabs-tab-list\">\r\n                        {\r\n                            categoryList.map((item) => (\r\n                                <Tab className=\"news-feed-tabs-tab\"\r\n                                     key={item.id}\r\n                                     onClick={() => handleTabClick(item)}>\r\n                                    {item.category}\r\n                                </Tab>\r\n                            ))}\r\n                    </TabList>\r\n                    {\r\n                        newsCategory === 'Вебинары' &&\r\n                        <NewsFeedMobileSelectSelect/>\r\n                    }\r\n                    {\r\n                        categoryList.map((item) => (\r\n                            <TabPanel className=\"news-feed-tabs-tab-panel\" key={item.id}>\r\n                                <MyErrorBoundary>\r\n                                    <Suspense fallback={<Preloader/>}>\r\n                                        {\r\n                                            newsCategory === 'Вебинары' ?\r\n                                                <NewsFeedWebinars/> :\r\n                                                <NewsFeedList/>\r\n                                        }\r\n                                    </Suspense>\r\n                                </MyErrorBoundary>\r\n                            </TabPanel>\r\n                        ))}\r\n                </Tabs>\r\n                <DropFilterBlock/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nNewsFeed.propTypes = {\r\n    activeTabIndex: PropTypes.number.isRequired,\r\n    newsCategory: PropTypes.string.isRequired,\r\n    setActiveTabIndex: PropTypes.func.isRequired,\r\n    changeNewsFeedTab: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({newsFeedReducer}) => ({\r\n    activeTabIndex: newsFeedReducer.activeTabIndex,\r\n    newsCategory: newsFeedReducer.newsCategory,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    setActiveTabIndex,\r\n    changeNewsFeedTab,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(NewsFeed);"],"sourceRoot":""}